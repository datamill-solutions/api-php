<?php
/**
 * BusinessDataDunsResolveResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * /data.mill for applications
 *
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.
 *
 * OpenAPI spec version: 1.6.4
 * Contact: info@datamill.solutions
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * BusinessDataDunsResolveResponse Class Doc Comment
 *
 * @category    Class */
 // @description Response of successful transformation request for /business-data/duns/resolve
/**
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BusinessDataDunsResolveResponse implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'BusinessDataDunsResolveResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'status' => 'string',
        'status_description' => 'string',
        'company_name' => 'string',
        'company_name_2' => 'string',
        'continent_name' => 'string',
        'country_code' => 'string',
        'country_code_3' => 'string',
        'zip' => 'string',
        'city' => 'string',
        'street' => 'string',
        'house_number' => 'string',
        'phone_number' => 'string',
        'fax_number' => 'string',
        'state_name' => 'string',
        'state_code' => 'string',
        'ceo_name' => 'string',
        'ceo_title' => 'string',
        'ceo_secondary' => 'string[]',
        'sic_code' => 'string',
        'sic_description' => 'string',
        'year_started' => 'string',
        'annual_turnover_local_currency' => 'int',
        'annual_turnover_indicator_code' => 'string',
        'annual_turnover_indicator_description' => 'string',
        'annual_turnover_usd' => 'int',
        'net_income' => 'int',
        'net_income_usd' => 'int',
        'net_worth' => 'int',
        'net_worth_usd' => 'int',
        'currency_code' => 'string',
        'currency_name' => 'string',
        'marketability_code' => 'string',
        'marketability_description' => 'string',
        'total_employees' => 'int',
        'total_employees_indicator' => 'string',
        'total_employees_indicator_description' => 'string',
        'total_employees_physical_address' => 'int',
        'total_employees_physical_address_indicator' => 'string',
        'import_export_indicator' => 'string',
        'import_export_indicator_description' => 'string',
        'legal_form_code' => 'int',
        'legal_form_description' => 'string',
        'business_structure_code' => 'string',
        'business_structure_description' => 'string',
        'business_registration_number_code' => 'string',
        'business_registration_number_code_description' => 'string',
        'undeliverable_indicator' => 'string',
        'undeliverable_description' => 'string',
        'financial_statement_date' => '\DateTime',
        'report_date' => '\DateTime',
        'is_only_available_address' => 'bool',
        'is_subsidiary' => 'bool',
        'total_employees_including_principals_indicator' => 'bool',
        'is_out_of_business' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'status' => 'status',
        'status_description' => 'status_description',
        'company_name' => 'company_name',
        'company_name_2' => 'company_name_2',
        'continent_name' => 'continent_name',
        'country_code' => 'country_code',
        'country_code_3' => 'country_code_3',
        'zip' => 'zip',
        'city' => 'city',
        'street' => 'street',
        'house_number' => 'house_number',
        'phone_number' => 'phone_number',
        'fax_number' => 'fax_number',
        'state_name' => 'state_name',
        'state_code' => 'state_code',
        'ceo_name' => 'ceo_name',
        'ceo_title' => 'ceo_title',
        'ceo_secondary' => 'ceo_secondary',
        'sic_code' => 'sic_code',
        'sic_description' => 'sic_description',
        'year_started' => 'year_started',
        'annual_turnover_local_currency' => 'annual_turnover_local_currency',
        'annual_turnover_indicator_code' => 'annual_turnover_indicator_code',
        'annual_turnover_indicator_description' => 'annual_turnover_indicator_description',
        'annual_turnover_usd' => 'annual_turnover_usd',
        'net_income' => 'net_income',
        'net_income_usd' => 'net_income_usd',
        'net_worth' => 'net_worth',
        'net_worth_usd' => 'net_worth_usd',
        'currency_code' => 'currency_code',
        'currency_name' => 'currency_name',
        'marketability_code' => 'marketability_code',
        'marketability_description' => 'marketability_description',
        'total_employees' => 'total_employees',
        'total_employees_indicator' => 'total_employees_indicator',
        'total_employees_indicator_description' => 'total_employees_indicator_description',
        'total_employees_physical_address' => 'total_employees_physical_address',
        'total_employees_physical_address_indicator' => 'total_employees_physical_address_indicator',
        'import_export_indicator' => 'import_export_indicator',
        'import_export_indicator_description' => 'import_export_indicator_description',
        'legal_form_code' => 'legal_form_code',
        'legal_form_description' => 'legal_form_description',
        'business_structure_code' => 'business_structure_code',
        'business_structure_description' => 'business_structure_description',
        'business_registration_number_code' => 'business_registration_number_code',
        'business_registration_number_code_description' => 'business_registration_number_code_description',
        'undeliverable_indicator' => 'undeliverable_indicator',
        'undeliverable_description' => 'undeliverable_description',
        'financial_statement_date' => 'financial_statement_date',
        'report_date' => 'report_date',
        'is_only_available_address' => 'is_only_available_address',
        'is_subsidiary' => 'is_subsidiary',
        'total_employees_including_principals_indicator' => 'total_employees_including_principals_indicator',
        'is_out_of_business' => 'is_out_of_business'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'status' => 'setStatus',
        'status_description' => 'setStatusDescription',
        'company_name' => 'setCompanyName',
        'company_name_2' => 'setCompanyName2',
        'continent_name' => 'setContinentName',
        'country_code' => 'setCountryCode',
        'country_code_3' => 'setCountryCode3',
        'zip' => 'setZip',
        'city' => 'setCity',
        'street' => 'setStreet',
        'house_number' => 'setHouseNumber',
        'phone_number' => 'setPhoneNumber',
        'fax_number' => 'setFaxNumber',
        'state_name' => 'setStateName',
        'state_code' => 'setStateCode',
        'ceo_name' => 'setCeoName',
        'ceo_title' => 'setCeoTitle',
        'ceo_secondary' => 'setCeoSecondary',
        'sic_code' => 'setSicCode',
        'sic_description' => 'setSicDescription',
        'year_started' => 'setYearStarted',
        'annual_turnover_local_currency' => 'setAnnualTurnoverLocalCurrency',
        'annual_turnover_indicator_code' => 'setAnnualTurnoverIndicatorCode',
        'annual_turnover_indicator_description' => 'setAnnualTurnoverIndicatorDescription',
        'annual_turnover_usd' => 'setAnnualTurnoverUsd',
        'net_income' => 'setNetIncome',
        'net_income_usd' => 'setNetIncomeUsd',
        'net_worth' => 'setNetWorth',
        'net_worth_usd' => 'setNetWorthUsd',
        'currency_code' => 'setCurrencyCode',
        'currency_name' => 'setCurrencyName',
        'marketability_code' => 'setMarketabilityCode',
        'marketability_description' => 'setMarketabilityDescription',
        'total_employees' => 'setTotalEmployees',
        'total_employees_indicator' => 'setTotalEmployeesIndicator',
        'total_employees_indicator_description' => 'setTotalEmployeesIndicatorDescription',
        'total_employees_physical_address' => 'setTotalEmployeesPhysicalAddress',
        'total_employees_physical_address_indicator' => 'setTotalEmployeesPhysicalAddressIndicator',
        'import_export_indicator' => 'setImportExportIndicator',
        'import_export_indicator_description' => 'setImportExportIndicatorDescription',
        'legal_form_code' => 'setLegalFormCode',
        'legal_form_description' => 'setLegalFormDescription',
        'business_structure_code' => 'setBusinessStructureCode',
        'business_structure_description' => 'setBusinessStructureDescription',
        'business_registration_number_code' => 'setBusinessRegistrationNumberCode',
        'business_registration_number_code_description' => 'setBusinessRegistrationNumberCodeDescription',
        'undeliverable_indicator' => 'setUndeliverableIndicator',
        'undeliverable_description' => 'setUndeliverableDescription',
        'financial_statement_date' => 'setFinancialStatementDate',
        'report_date' => 'setReportDate',
        'is_only_available_address' => 'setIsOnlyAvailableAddress',
        'is_subsidiary' => 'setIsSubsidiary',
        'total_employees_including_principals_indicator' => 'setTotalEmployeesIncludingPrincipalsIndicator',
        'is_out_of_business' => 'setIsOutOfBusiness'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'status' => 'getStatus',
        'status_description' => 'getStatusDescription',
        'company_name' => 'getCompanyName',
        'company_name_2' => 'getCompanyName2',
        'continent_name' => 'getContinentName',
        'country_code' => 'getCountryCode',
        'country_code_3' => 'getCountryCode3',
        'zip' => 'getZip',
        'city' => 'getCity',
        'street' => 'getStreet',
        'house_number' => 'getHouseNumber',
        'phone_number' => 'getPhoneNumber',
        'fax_number' => 'getFaxNumber',
        'state_name' => 'getStateName',
        'state_code' => 'getStateCode',
        'ceo_name' => 'getCeoName',
        'ceo_title' => 'getCeoTitle',
        'ceo_secondary' => 'getCeoSecondary',
        'sic_code' => 'getSicCode',
        'sic_description' => 'getSicDescription',
        'year_started' => 'getYearStarted',
        'annual_turnover_local_currency' => 'getAnnualTurnoverLocalCurrency',
        'annual_turnover_indicator_code' => 'getAnnualTurnoverIndicatorCode',
        'annual_turnover_indicator_description' => 'getAnnualTurnoverIndicatorDescription',
        'annual_turnover_usd' => 'getAnnualTurnoverUsd',
        'net_income' => 'getNetIncome',
        'net_income_usd' => 'getNetIncomeUsd',
        'net_worth' => 'getNetWorth',
        'net_worth_usd' => 'getNetWorthUsd',
        'currency_code' => 'getCurrencyCode',
        'currency_name' => 'getCurrencyName',
        'marketability_code' => 'getMarketabilityCode',
        'marketability_description' => 'getMarketabilityDescription',
        'total_employees' => 'getTotalEmployees',
        'total_employees_indicator' => 'getTotalEmployeesIndicator',
        'total_employees_indicator_description' => 'getTotalEmployeesIndicatorDescription',
        'total_employees_physical_address' => 'getTotalEmployeesPhysicalAddress',
        'total_employees_physical_address_indicator' => 'getTotalEmployeesPhysicalAddressIndicator',
        'import_export_indicator' => 'getImportExportIndicator',
        'import_export_indicator_description' => 'getImportExportIndicatorDescription',
        'legal_form_code' => 'getLegalFormCode',
        'legal_form_description' => 'getLegalFormDescription',
        'business_structure_code' => 'getBusinessStructureCode',
        'business_structure_description' => 'getBusinessStructureDescription',
        'business_registration_number_code' => 'getBusinessRegistrationNumberCode',
        'business_registration_number_code_description' => 'getBusinessRegistrationNumberCodeDescription',
        'undeliverable_indicator' => 'getUndeliverableIndicator',
        'undeliverable_description' => 'getUndeliverableDescription',
        'financial_statement_date' => 'getFinancialStatementDate',
        'report_date' => 'getReportDate',
        'is_only_available_address' => 'getIsOnlyAvailableAddress',
        'is_subsidiary' => 'getIsSubsidiary',
        'total_employees_including_principals_indicator' => 'getTotalEmployeesIncludingPrincipalsIndicator',
        'is_out_of_business' => 'getIsOutOfBusiness'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const STATUS__0 = '0';
    const STATUS__1 = '1';
    const STATUS_DESCRIPTION_COMPANY_FOUND = 'company found';
    const STATUS_DESCRIPTION_COMPANY_NOT_FOUND = 'company not found';
    const STATUS_DESCRIPTION_INVALID_DUNS_NUMBER = 'invalid duns number';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS__0,
            self::STATUS__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusDescriptionAllowableValues()
    {
        return [
            self::STATUS_DESCRIPTION_COMPANY_FOUND,
            self::STATUS_DESCRIPTION_COMPANY_NOT_FOUND,
            self::STATUS_DESCRIPTION_INVALID_DUNS_NUMBER,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_description'] = isset($data['status_description']) ? $data['status_description'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['company_name_2'] = isset($data['company_name_2']) ? $data['company_name_2'] : null;
        $this->container['continent_name'] = isset($data['continent_name']) ? $data['continent_name'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['country_code_3'] = isset($data['country_code_3']) ? $data['country_code_3'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['house_number'] = isset($data['house_number']) ? $data['house_number'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['fax_number'] = isset($data['fax_number']) ? $data['fax_number'] : null;
        $this->container['state_name'] = isset($data['state_name']) ? $data['state_name'] : null;
        $this->container['state_code'] = isset($data['state_code']) ? $data['state_code'] : null;
        $this->container['ceo_name'] = isset($data['ceo_name']) ? $data['ceo_name'] : null;
        $this->container['ceo_title'] = isset($data['ceo_title']) ? $data['ceo_title'] : null;
        $this->container['ceo_secondary'] = isset($data['ceo_secondary']) ? $data['ceo_secondary'] : null;
        $this->container['sic_code'] = isset($data['sic_code']) ? $data['sic_code'] : null;
        $this->container['sic_description'] = isset($data['sic_description']) ? $data['sic_description'] : null;
        $this->container['year_started'] = isset($data['year_started']) ? $data['year_started'] : null;
        $this->container['annual_turnover_local_currency'] = isset($data['annual_turnover_local_currency']) ? $data['annual_turnover_local_currency'] : null;
        $this->container['annual_turnover_indicator_code'] = isset($data['annual_turnover_indicator_code']) ? $data['annual_turnover_indicator_code'] : null;
        $this->container['annual_turnover_indicator_description'] = isset($data['annual_turnover_indicator_description']) ? $data['annual_turnover_indicator_description'] : null;
        $this->container['annual_turnover_usd'] = isset($data['annual_turnover_usd']) ? $data['annual_turnover_usd'] : null;
        $this->container['net_income'] = isset($data['net_income']) ? $data['net_income'] : null;
        $this->container['net_income_usd'] = isset($data['net_income_usd']) ? $data['net_income_usd'] : null;
        $this->container['net_worth'] = isset($data['net_worth']) ? $data['net_worth'] : null;
        $this->container['net_worth_usd'] = isset($data['net_worth_usd']) ? $data['net_worth_usd'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['currency_name'] = isset($data['currency_name']) ? $data['currency_name'] : null;
        $this->container['marketability_code'] = isset($data['marketability_code']) ? $data['marketability_code'] : null;
        $this->container['marketability_description'] = isset($data['marketability_description']) ? $data['marketability_description'] : null;
        $this->container['total_employees'] = isset($data['total_employees']) ? $data['total_employees'] : null;
        $this->container['total_employees_indicator'] = isset($data['total_employees_indicator']) ? $data['total_employees_indicator'] : null;
        $this->container['total_employees_indicator_description'] = isset($data['total_employees_indicator_description']) ? $data['total_employees_indicator_description'] : null;
        $this->container['total_employees_physical_address'] = isset($data['total_employees_physical_address']) ? $data['total_employees_physical_address'] : null;
        $this->container['total_employees_physical_address_indicator'] = isset($data['total_employees_physical_address_indicator']) ? $data['total_employees_physical_address_indicator'] : null;
        $this->container['import_export_indicator'] = isset($data['import_export_indicator']) ? $data['import_export_indicator'] : null;
        $this->container['import_export_indicator_description'] = isset($data['import_export_indicator_description']) ? $data['import_export_indicator_description'] : null;
        $this->container['legal_form_code'] = isset($data['legal_form_code']) ? $data['legal_form_code'] : null;
        $this->container['legal_form_description'] = isset($data['legal_form_description']) ? $data['legal_form_description'] : null;
        $this->container['business_structure_code'] = isset($data['business_structure_code']) ? $data['business_structure_code'] : null;
        $this->container['business_structure_description'] = isset($data['business_structure_description']) ? $data['business_structure_description'] : null;
        $this->container['business_registration_number_code'] = isset($data['business_registration_number_code']) ? $data['business_registration_number_code'] : null;
        $this->container['business_registration_number_code_description'] = isset($data['business_registration_number_code_description']) ? $data['business_registration_number_code_description'] : null;
        $this->container['undeliverable_indicator'] = isset($data['undeliverable_indicator']) ? $data['undeliverable_indicator'] : null;
        $this->container['undeliverable_description'] = isset($data['undeliverable_description']) ? $data['undeliverable_description'] : null;
        $this->container['financial_statement_date'] = isset($data['financial_statement_date']) ? $data['financial_statement_date'] : null;
        $this->container['report_date'] = isset($data['report_date']) ? $data['report_date'] : null;
        $this->container['is_only_available_address'] = isset($data['is_only_available_address']) ? $data['is_only_available_address'] : null;
        $this->container['is_subsidiary'] = isset($data['is_subsidiary']) ? $data['is_subsidiary'] : null;
        $this->container['total_employees_including_principals_indicator'] = isset($data['total_employees_including_principals_indicator']) ? $data['total_employees_including_principals_indicator'] : null;
        $this->container['is_out_of_business'] = isset($data['is_out_of_business']) ? $data['is_out_of_business'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['status'] === null) {
            $invalid_properties[] = "'status' can't be null";
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status', must be one of '0', '1'.";
        }

        if ($this->container['status_description'] === null) {
            $invalid_properties[] = "'status_description' can't be null";
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['status_description'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status_description', must be one of 'company found', 'company not found', 'invalid duns number'.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['status'] === null) {
            return false;
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            return false;
        }
        if ($this->container['status_description'] === null) {
            return false;
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['status_description'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $allowed_values = array('0', '1');
        if ((!in_array($status, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status', must be one of '0', '1'");
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_description
     * @return string
     */
    public function getStatusDescription()
    {
        return $this->container['status_description'];
    }

    /**
     * Sets status_description
     * @param string $status_description
     * @return $this
     */
    public function setStatusDescription($status_description)
    {
        $allowed_values = array('company found', 'company not found', 'invalid duns number');
        if ((!in_array($status_description, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status_description', must be one of 'company found', 'company not found', 'invalid duns number'");
        }
        $this->container['status_description'] = $status_description;

        return $this;
    }

    /**
     * Gets company_name
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     * @param string $company_name
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_name_2
     * @return string
     */
    public function getCompanyName2()
    {
        return $this->container['company_name_2'];
    }

    /**
     * Sets company_name_2
     * @param string $company_name_2
     * @return $this
     */
    public function setCompanyName2($company_name_2)
    {
        $this->container['company_name_2'] = $company_name_2;

        return $this;
    }

    /**
     * Gets continent_name
     * @return string
     */
    public function getContinentName()
    {
        return $this->container['continent_name'];
    }

    /**
     * Sets continent_name
     * @param string $continent_name
     * @return $this
     */
    public function setContinentName($continent_name)
    {
        $this->container['continent_name'] = $continent_name;

        return $this;
    }

    /**
     * Gets country_code
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     * @param string $country_code
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets country_code_3
     * @return string
     */
    public function getCountryCode3()
    {
        return $this->container['country_code_3'];
    }

    /**
     * Sets country_code_3
     * @param string $country_code_3
     * @return $this
     */
    public function setCountryCode3($country_code_3)
    {
        $this->container['country_code_3'] = $country_code_3;

        return $this;
    }

    /**
     * Gets zip
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     * @param string $zip
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets street
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     * @param string $street
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets house_number
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['house_number'];
    }

    /**
     * Sets house_number
     * @param string $house_number
     * @return $this
     */
    public function setHouseNumber($house_number)
    {
        $this->container['house_number'] = $house_number;

        return $this;
    }

    /**
     * Gets phone_number
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     * @param string $phone_number
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets fax_number
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['fax_number'];
    }

    /**
     * Sets fax_number
     * @param string $fax_number
     * @return $this
     */
    public function setFaxNumber($fax_number)
    {
        $this->container['fax_number'] = $fax_number;

        return $this;
    }

    /**
     * Gets state_name
     * @return string
     */
    public function getStateName()
    {
        return $this->container['state_name'];
    }

    /**
     * Sets state_name
     * @param string $state_name
     * @return $this
     */
    public function setStateName($state_name)
    {
        $this->container['state_name'] = $state_name;

        return $this;
    }

    /**
     * Gets state_code
     * @return string
     */
    public function getStateCode()
    {
        return $this->container['state_code'];
    }

    /**
     * Sets state_code
     * @param string $state_code
     * @return $this
     */
    public function setStateCode($state_code)
    {
        $this->container['state_code'] = $state_code;

        return $this;
    }

    /**
     * Gets ceo_name
     * @return string
     */
    public function getCeoName()
    {
        return $this->container['ceo_name'];
    }

    /**
     * Sets ceo_name
     * @param string $ceo_name
     * @return $this
     */
    public function setCeoName($ceo_name)
    {
        $this->container['ceo_name'] = $ceo_name;

        return $this;
    }

    /**
     * Gets ceo_title
     * @return string
     */
    public function getCeoTitle()
    {
        return $this->container['ceo_title'];
    }

    /**
     * Sets ceo_title
     * @param string $ceo_title
     * @return $this
     */
    public function setCeoTitle($ceo_title)
    {
        $this->container['ceo_title'] = $ceo_title;

        return $this;
    }

    /**
     * Gets ceo_secondary
     * @return string[]
     */
    public function getCeoSecondary()
    {
        return $this->container['ceo_secondary'];
    }

    /**
     * Sets ceo_secondary
     * @param string[] $ceo_secondary
     * @return $this
     */
    public function setCeoSecondary($ceo_secondary)
    {
        $this->container['ceo_secondary'] = $ceo_secondary;

        return $this;
    }

    /**
     * Gets sic_code
     * @return string
     */
    public function getSicCode()
    {
        return $this->container['sic_code'];
    }

    /**
     * Sets sic_code
     * @param string $sic_code
     * @return $this
     */
    public function setSicCode($sic_code)
    {
        $this->container['sic_code'] = $sic_code;

        return $this;
    }

    /**
     * Gets sic_description
     * @return string
     */
    public function getSicDescription()
    {
        return $this->container['sic_description'];
    }

    /**
     * Sets sic_description
     * @param string $sic_description
     * @return $this
     */
    public function setSicDescription($sic_description)
    {
        $this->container['sic_description'] = $sic_description;

        return $this;
    }

    /**
     * Gets year_started
     * @return string
     */
    public function getYearStarted()
    {
        return $this->container['year_started'];
    }

    /**
     * Sets year_started
     * @param string $year_started
     * @return $this
     */
    public function setYearStarted($year_started)
    {
        $this->container['year_started'] = $year_started;

        return $this;
    }

    /**
     * Gets annual_turnover_local_currency
     * @return int
     */
    public function getAnnualTurnoverLocalCurrency()
    {
        return $this->container['annual_turnover_local_currency'];
    }

    /**
     * Sets annual_turnover_local_currency
     * @param int $annual_turnover_local_currency
     * @return $this
     */
    public function setAnnualTurnoverLocalCurrency($annual_turnover_local_currency)
    {
        $this->container['annual_turnover_local_currency'] = $annual_turnover_local_currency;

        return $this;
    }

    /**
     * Gets annual_turnover_indicator_code
     * @return string
     */
    public function getAnnualTurnoverIndicatorCode()
    {
        return $this->container['annual_turnover_indicator_code'];
    }

    /**
     * Sets annual_turnover_indicator_code
     * @param string $annual_turnover_indicator_code
     * @return $this
     */
    public function setAnnualTurnoverIndicatorCode($annual_turnover_indicator_code)
    {
        $this->container['annual_turnover_indicator_code'] = $annual_turnover_indicator_code;

        return $this;
    }

    /**
     * Gets annual_turnover_indicator_description
     * @return string
     */
    public function getAnnualTurnoverIndicatorDescription()
    {
        return $this->container['annual_turnover_indicator_description'];
    }

    /**
     * Sets annual_turnover_indicator_description
     * @param string $annual_turnover_indicator_description
     * @return $this
     */
    public function setAnnualTurnoverIndicatorDescription($annual_turnover_indicator_description)
    {
        $this->container['annual_turnover_indicator_description'] = $annual_turnover_indicator_description;

        return $this;
    }

    /**
     * Gets annual_turnover_usd
     * @return int
     */
    public function getAnnualTurnoverUsd()
    {
        return $this->container['annual_turnover_usd'];
    }

    /**
     * Sets annual_turnover_usd
     * @param int $annual_turnover_usd
     * @return $this
     */
    public function setAnnualTurnoverUsd($annual_turnover_usd)
    {
        $this->container['annual_turnover_usd'] = $annual_turnover_usd;

        return $this;
    }

    /**
     * Gets net_income
     * @return int
     */
    public function getNetIncome()
    {
        return $this->container['net_income'];
    }

    /**
     * Sets net_income
     * @param int $net_income
     * @return $this
     */
    public function setNetIncome($net_income)
    {
        $this->container['net_income'] = $net_income;

        return $this;
    }

    /**
     * Gets net_income_usd
     * @return int
     */
    public function getNetIncomeUsd()
    {
        return $this->container['net_income_usd'];
    }

    /**
     * Sets net_income_usd
     * @param int $net_income_usd
     * @return $this
     */
    public function setNetIncomeUsd($net_income_usd)
    {
        $this->container['net_income_usd'] = $net_income_usd;

        return $this;
    }

    /**
     * Gets net_worth
     * @return int
     */
    public function getNetWorth()
    {
        return $this->container['net_worth'];
    }

    /**
     * Sets net_worth
     * @param int $net_worth
     * @return $this
     */
    public function setNetWorth($net_worth)
    {
        $this->container['net_worth'] = $net_worth;

        return $this;
    }

    /**
     * Gets net_worth_usd
     * @return int
     */
    public function getNetWorthUsd()
    {
        return $this->container['net_worth_usd'];
    }

    /**
     * Sets net_worth_usd
     * @param int $net_worth_usd
     * @return $this
     */
    public function setNetWorthUsd($net_worth_usd)
    {
        $this->container['net_worth_usd'] = $net_worth_usd;

        return $this;
    }

    /**
     * Gets currency_code
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     * @param string $currency_code
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets currency_name
     * @return string
     */
    public function getCurrencyName()
    {
        return $this->container['currency_name'];
    }

    /**
     * Sets currency_name
     * @param string $currency_name
     * @return $this
     */
    public function setCurrencyName($currency_name)
    {
        $this->container['currency_name'] = $currency_name;

        return $this;
    }

    /**
     * Gets marketability_code
     * @return string
     */
    public function getMarketabilityCode()
    {
        return $this->container['marketability_code'];
    }

    /**
     * Sets marketability_code
     * @param string $marketability_code
     * @return $this
     */
    public function setMarketabilityCode($marketability_code)
    {
        $this->container['marketability_code'] = $marketability_code;

        return $this;
    }

    /**
     * Gets marketability_description
     * @return string
     */
    public function getMarketabilityDescription()
    {
        return $this->container['marketability_description'];
    }

    /**
     * Sets marketability_description
     * @param string $marketability_description
     * @return $this
     */
    public function setMarketabilityDescription($marketability_description)
    {
        $this->container['marketability_description'] = $marketability_description;

        return $this;
    }

    /**
     * Gets total_employees
     * @return int
     */
    public function getTotalEmployees()
    {
        return $this->container['total_employees'];
    }

    /**
     * Sets total_employees
     * @param int $total_employees
     * @return $this
     */
    public function setTotalEmployees($total_employees)
    {
        $this->container['total_employees'] = $total_employees;

        return $this;
    }

    /**
     * Gets total_employees_indicator
     * @return string
     */
    public function getTotalEmployeesIndicator()
    {
        return $this->container['total_employees_indicator'];
    }

    /**
     * Sets total_employees_indicator
     * @param string $total_employees_indicator
     * @return $this
     */
    public function setTotalEmployeesIndicator($total_employees_indicator)
    {
        $this->container['total_employees_indicator'] = $total_employees_indicator;

        return $this;
    }

    /**
     * Gets total_employees_indicator_description
     * @return string
     */
    public function getTotalEmployeesIndicatorDescription()
    {
        return $this->container['total_employees_indicator_description'];
    }

    /**
     * Sets total_employees_indicator_description
     * @param string $total_employees_indicator_description
     * @return $this
     */
    public function setTotalEmployeesIndicatorDescription($total_employees_indicator_description)
    {
        $this->container['total_employees_indicator_description'] = $total_employees_indicator_description;

        return $this;
    }

    /**
     * Gets total_employees_physical_address
     * @return int
     */
    public function getTotalEmployeesPhysicalAddress()
    {
        return $this->container['total_employees_physical_address'];
    }

    /**
     * Sets total_employees_physical_address
     * @param int $total_employees_physical_address
     * @return $this
     */
    public function setTotalEmployeesPhysicalAddress($total_employees_physical_address)
    {
        $this->container['total_employees_physical_address'] = $total_employees_physical_address;

        return $this;
    }

    /**
     * Gets total_employees_physical_address_indicator
     * @return string
     */
    public function getTotalEmployeesPhysicalAddressIndicator()
    {
        return $this->container['total_employees_physical_address_indicator'];
    }

    /**
     * Sets total_employees_physical_address_indicator
     * @param string $total_employees_physical_address_indicator
     * @return $this
     */
    public function setTotalEmployeesPhysicalAddressIndicator($total_employees_physical_address_indicator)
    {
        $this->container['total_employees_physical_address_indicator'] = $total_employees_physical_address_indicator;

        return $this;
    }

    /**
     * Gets import_export_indicator
     * @return string
     */
    public function getImportExportIndicator()
    {
        return $this->container['import_export_indicator'];
    }

    /**
     * Sets import_export_indicator
     * @param string $import_export_indicator
     * @return $this
     */
    public function setImportExportIndicator($import_export_indicator)
    {
        $this->container['import_export_indicator'] = $import_export_indicator;

        return $this;
    }

    /**
     * Gets import_export_indicator_description
     * @return string
     */
    public function getImportExportIndicatorDescription()
    {
        return $this->container['import_export_indicator_description'];
    }

    /**
     * Sets import_export_indicator_description
     * @param string $import_export_indicator_description
     * @return $this
     */
    public function setImportExportIndicatorDescription($import_export_indicator_description)
    {
        $this->container['import_export_indicator_description'] = $import_export_indicator_description;

        return $this;
    }

    /**
     * Gets legal_form_code
     * @return int
     */
    public function getLegalFormCode()
    {
        return $this->container['legal_form_code'];
    }

    /**
     * Sets legal_form_code
     * @param int $legal_form_code
     * @return $this
     */
    public function setLegalFormCode($legal_form_code)
    {
        $this->container['legal_form_code'] = $legal_form_code;

        return $this;
    }

    /**
     * Gets legal_form_description
     * @return string
     */
    public function getLegalFormDescription()
    {
        return $this->container['legal_form_description'];
    }

    /**
     * Sets legal_form_description
     * @param string $legal_form_description
     * @return $this
     */
    public function setLegalFormDescription($legal_form_description)
    {
        $this->container['legal_form_description'] = $legal_form_description;

        return $this;
    }

    /**
     * Gets business_structure_code
     * @return string
     */
    public function getBusinessStructureCode()
    {
        return $this->container['business_structure_code'];
    }

    /**
     * Sets business_structure_code
     * @param string $business_structure_code
     * @return $this
     */
    public function setBusinessStructureCode($business_structure_code)
    {
        $this->container['business_structure_code'] = $business_structure_code;

        return $this;
    }

    /**
     * Gets business_structure_description
     * @return string
     */
    public function getBusinessStructureDescription()
    {
        return $this->container['business_structure_description'];
    }

    /**
     * Sets business_structure_description
     * @param string $business_structure_description
     * @return $this
     */
    public function setBusinessStructureDescription($business_structure_description)
    {
        $this->container['business_structure_description'] = $business_structure_description;

        return $this;
    }

    /**
     * Gets business_registration_number_code
     * @return string
     */
    public function getBusinessRegistrationNumberCode()
    {
        return $this->container['business_registration_number_code'];
    }

    /**
     * Sets business_registration_number_code
     * @param string $business_registration_number_code
     * @return $this
     */
    public function setBusinessRegistrationNumberCode($business_registration_number_code)
    {
        $this->container['business_registration_number_code'] = $business_registration_number_code;

        return $this;
    }

    /**
     * Gets business_registration_number_code_description
     * @return string
     */
    public function getBusinessRegistrationNumberCodeDescription()
    {
        return $this->container['business_registration_number_code_description'];
    }

    /**
     * Sets business_registration_number_code_description
     * @param string $business_registration_number_code_description
     * @return $this
     */
    public function setBusinessRegistrationNumberCodeDescription($business_registration_number_code_description)
    {
        $this->container['business_registration_number_code_description'] = $business_registration_number_code_description;

        return $this;
    }

    /**
     * Gets undeliverable_indicator
     * @return string
     */
    public function getUndeliverableIndicator()
    {
        return $this->container['undeliverable_indicator'];
    }

    /**
     * Sets undeliverable_indicator
     * @param string $undeliverable_indicator
     * @return $this
     */
    public function setUndeliverableIndicator($undeliverable_indicator)
    {
        $this->container['undeliverable_indicator'] = $undeliverable_indicator;

        return $this;
    }

    /**
     * Gets undeliverable_description
     * @return string
     */
    public function getUndeliverableDescription()
    {
        return $this->container['undeliverable_description'];
    }

    /**
     * Sets undeliverable_description
     * @param string $undeliverable_description
     * @return $this
     */
    public function setUndeliverableDescription($undeliverable_description)
    {
        $this->container['undeliverable_description'] = $undeliverable_description;

        return $this;
    }

    /**
     * Gets financial_statement_date
     * @return \DateTime
     */
    public function getFinancialStatementDate()
    {
        return $this->container['financial_statement_date'];
    }

    /**
     * Sets financial_statement_date
     * @param \DateTime $financial_statement_date
     * @return $this
     */
    public function setFinancialStatementDate($financial_statement_date)
    {
        $this->container['financial_statement_date'] = $financial_statement_date;

        return $this;
    }

    /**
     * Gets report_date
     * @return \DateTime
     */
    public function getReportDate()
    {
        return $this->container['report_date'];
    }

    /**
     * Sets report_date
     * @param \DateTime $report_date
     * @return $this
     */
    public function setReportDate($report_date)
    {
        $this->container['report_date'] = $report_date;

        return $this;
    }

    /**
     * Gets is_only_available_address
     * @return bool
     */
    public function getIsOnlyAvailableAddress()
    {
        return $this->container['is_only_available_address'];
    }

    /**
     * Sets is_only_available_address
     * @param bool $is_only_available_address
     * @return $this
     */
    public function setIsOnlyAvailableAddress($is_only_available_address)
    {
        $this->container['is_only_available_address'] = $is_only_available_address;

        return $this;
    }

    /**
     * Gets is_subsidiary
     * @return bool
     */
    public function getIsSubsidiary()
    {
        return $this->container['is_subsidiary'];
    }

    /**
     * Sets is_subsidiary
     * @param bool $is_subsidiary
     * @return $this
     */
    public function setIsSubsidiary($is_subsidiary)
    {
        $this->container['is_subsidiary'] = $is_subsidiary;

        return $this;
    }

    /**
     * Gets total_employees_including_principals_indicator
     * @return bool
     */
    public function getTotalEmployeesIncludingPrincipalsIndicator()
    {
        return $this->container['total_employees_including_principals_indicator'];
    }

    /**
     * Sets total_employees_including_principals_indicator
     * @param bool $total_employees_including_principals_indicator
     * @return $this
     */
    public function setTotalEmployeesIncludingPrincipalsIndicator($total_employees_including_principals_indicator)
    {
        $this->container['total_employees_including_principals_indicator'] = $total_employees_including_principals_indicator;

        return $this;
    }

    /**
     * Gets is_out_of_business
     * @return bool
     */
    public function getIsOutOfBusiness()
    {
        return $this->container['is_out_of_business'];
    }

    /**
     * Sets is_out_of_business
     * @param bool $is_out_of_business
     * @return $this
     */
    public function setIsOutOfBusiness($is_out_of_business)
    {
        $this->container['is_out_of_business'] = $is_out_of_business;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}
