<?php
/**
 * BusinessDataDunsRatingResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  DataMill
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * /data.mill for applications
 *
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.
 *
 * OpenAPI spec version: 1.6.4
 * Contact: info@datamill.solutions
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DataMill;

use \ArrayAccess;

/**
 * BusinessDataDunsRatingResponse Class Doc Comment
 *
 * @category    Class */
 // @description Response of successful transformation request for /business-data/duns/rating
/**
 * @package     DataMill
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BusinessDataDunsRatingResponse implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'BusinessDataDunsRatingResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'status' => 'string',
        'status_description' => 'string',
        'duns_number' => 'string',
        'company_name' => 'string',
        'continent_name' => 'string',
        'country_code' => 'string',
        'country_code_3' => 'string',
        'country_name' => 'string',
        'zip' => 'string',
        'city' => 'string',
        'street' => 'string',
        'house_number' => 'string',
        'phone_number' => 'string',
        'fax_number' => 'string',
        'state_name' => 'string',
        'ceo_name' => 'string',
        'ceo_title' => 'string',
        'sic_code' => 'string',
        'sic_description' => 'string',
        'sic_version' => 'string',
        'year_started' => 'string',
        'net_worth' => 'int',
        'currency_code' => 'string',
        'currency_name' => 'string',
        'total_employees' => 'int',
        'total_employees_indicator' => 'string',
        'total_employees_indicator_description' => 'string',
        'legal_form_code' => 'int',
        'legal_form_description' => 'string',
        'report_date' => '\DateTime',
        'is_out_of_business' => 'bool',
        'is_branch' => 'bool',
        'business_registration_number' => 'string',
        'business_registration_type' => 'string',
        'incorporation_year' => 'string',
        'trade_styles' => 'string[]',
        'enquiry_duns' => 'string',
        'sales' => 'int',
        'sales_estimated_description' => 'string',
        'paydex_score' => 'int',
        'paydex_score_description' => 'string',
        'paydex_norm' => 'int',
        'intangible_assets' => 'int',
        'max_credit_recommendation' => 'int',
        'dub_rating' => 'string',
        'dub_rating_financial_strength' => 'string',
        'dub_rating_risk' => 'string',
        'dub_rating_risk_description' => 'string',
        'has_open_claims' => 'bool',
        'has_criminal_proceedings' => 'bool',
        'has_disaster_event' => 'bool',
        'has_financial_embarrassment' => 'bool',
        'has_financial_legal_event' => 'bool',
        'has_special_event' => 'bool',
        'has_other_event' => 'bool',
        'has_secured_filings' => 'bool',
        'has_lawsuit' => 'bool',
        'are_employees_estimated' => 'bool',
        'are_sales_estimated' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'status' => 'status',
        'status_description' => 'status_description',
        'duns_number' => 'duns_number',
        'company_name' => 'company_name',
        'continent_name' => 'continent_name',
        'country_code' => 'country_code',
        'country_code_3' => 'country_code_3',
        'country_name' => 'country_name',
        'zip' => 'zip',
        'city' => 'city',
        'street' => 'street',
        'house_number' => 'house_number',
        'phone_number' => 'phone_number',
        'fax_number' => 'fax_number',
        'state_name' => 'state_name',
        'ceo_name' => 'ceo_name',
        'ceo_title' => 'ceo_title',
        'sic_code' => 'sic_code',
        'sic_description' => 'sic_description',
        'sic_version' => 'sic_version',
        'year_started' => 'year_started',
        'net_worth' => 'net_worth',
        'currency_code' => 'currency_code',
        'currency_name' => 'currency_name',
        'total_employees' => 'total_employees',
        'total_employees_indicator' => 'total_employees_indicator',
        'total_employees_indicator_description' => 'total_employees_indicator_description',
        'legal_form_code' => 'legal_form_code',
        'legal_form_description' => 'legal_form_description',
        'report_date' => 'report_date',
        'is_out_of_business' => 'is_out_of_business',
        'is_branch' => 'is_branch',
        'business_registration_number' => 'business_registration_number',
        'business_registration_type' => 'business_registration_type',
        'incorporation_year' => 'incorporation_year',
        'trade_styles' => 'trade_styles',
        'enquiry_duns' => 'enquiry_duns',
        'sales' => 'sales',
        'sales_estimated_description' => 'sales_estimated_description',
        'paydex_score' => 'paydex_score',
        'paydex_score_description' => 'paydex_score_description',
        'paydex_norm' => 'paydex_norm',
        'intangible_assets' => 'intangible_assets',
        'max_credit_recommendation' => 'max_credit_recommendation',
        'dub_rating' => 'dub_rating',
        'dub_rating_financial_strength' => 'dub_rating_financial_strength',
        'dub_rating_risk' => 'dub_rating_risk',
        'dub_rating_risk_description' => 'dub_rating_risk_description',
        'has_open_claims' => 'has_open_claims',
        'has_criminal_proceedings' => 'has_criminal_proceedings',
        'has_disaster_event' => 'has_disaster_event',
        'has_financial_embarrassment' => 'has_financial_embarrassment',
        'has_financial_legal_event' => 'has_financial_legal_event',
        'has_special_event' => 'has_special_event',
        'has_other_event' => 'has_other_event',
        'has_secured_filings' => 'has_secured_filings',
        'has_lawsuit' => 'has_lawsuit',
        'are_employees_estimated' => 'are_employees_estimated',
        'are_sales_estimated' => 'are_sales_estimated'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'status' => 'setStatus',
        'status_description' => 'setStatusDescription',
        'duns_number' => 'setDunsNumber',
        'company_name' => 'setCompanyName',
        'continent_name' => 'setContinentName',
        'country_code' => 'setCountryCode',
        'country_code_3' => 'setCountryCode3',
        'country_name' => 'setCountryName',
        'zip' => 'setZip',
        'city' => 'setCity',
        'street' => 'setStreet',
        'house_number' => 'setHouseNumber',
        'phone_number' => 'setPhoneNumber',
        'fax_number' => 'setFaxNumber',
        'state_name' => 'setStateName',
        'ceo_name' => 'setCeoName',
        'ceo_title' => 'setCeoTitle',
        'sic_code' => 'setSicCode',
        'sic_description' => 'setSicDescription',
        'sic_version' => 'setSicVersion',
        'year_started' => 'setYearStarted',
        'net_worth' => 'setNetWorth',
        'currency_code' => 'setCurrencyCode',
        'currency_name' => 'setCurrencyName',
        'total_employees' => 'setTotalEmployees',
        'total_employees_indicator' => 'setTotalEmployeesIndicator',
        'total_employees_indicator_description' => 'setTotalEmployeesIndicatorDescription',
        'legal_form_code' => 'setLegalFormCode',
        'legal_form_description' => 'setLegalFormDescription',
        'report_date' => 'setReportDate',
        'is_out_of_business' => 'setIsOutOfBusiness',
        'is_branch' => 'setIsBranch',
        'business_registration_number' => 'setBusinessRegistrationNumber',
        'business_registration_type' => 'setBusinessRegistrationType',
        'incorporation_year' => 'setIncorporationYear',
        'trade_styles' => 'setTradeStyles',
        'enquiry_duns' => 'setEnquiryDuns',
        'sales' => 'setSales',
        'sales_estimated_description' => 'setSalesEstimatedDescription',
        'paydex_score' => 'setPaydexScore',
        'paydex_score_description' => 'setPaydexScoreDescription',
        'paydex_norm' => 'setPaydexNorm',
        'intangible_assets' => 'setIntangibleAssets',
        'max_credit_recommendation' => 'setMaxCreditRecommendation',
        'dub_rating' => 'setDubRating',
        'dub_rating_financial_strength' => 'setDubRatingFinancialStrength',
        'dub_rating_risk' => 'setDubRatingRisk',
        'dub_rating_risk_description' => 'setDubRatingRiskDescription',
        'has_open_claims' => 'setHasOpenClaims',
        'has_criminal_proceedings' => 'setHasCriminalProceedings',
        'has_disaster_event' => 'setHasDisasterEvent',
        'has_financial_embarrassment' => 'setHasFinancialEmbarrassment',
        'has_financial_legal_event' => 'setHasFinancialLegalEvent',
        'has_special_event' => 'setHasSpecialEvent',
        'has_other_event' => 'setHasOtherEvent',
        'has_secured_filings' => 'setHasSecuredFilings',
        'has_lawsuit' => 'setHasLawsuit',
        'are_employees_estimated' => 'setAreEmployeesEstimated',
        'are_sales_estimated' => 'setAreSalesEstimated'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'status' => 'getStatus',
        'status_description' => 'getStatusDescription',
        'duns_number' => 'getDunsNumber',
        'company_name' => 'getCompanyName',
        'continent_name' => 'getContinentName',
        'country_code' => 'getCountryCode',
        'country_code_3' => 'getCountryCode3',
        'country_name' => 'getCountryName',
        'zip' => 'getZip',
        'city' => 'getCity',
        'street' => 'getStreet',
        'house_number' => 'getHouseNumber',
        'phone_number' => 'getPhoneNumber',
        'fax_number' => 'getFaxNumber',
        'state_name' => 'getStateName',
        'ceo_name' => 'getCeoName',
        'ceo_title' => 'getCeoTitle',
        'sic_code' => 'getSicCode',
        'sic_description' => 'getSicDescription',
        'sic_version' => 'getSicVersion',
        'year_started' => 'getYearStarted',
        'net_worth' => 'getNetWorth',
        'currency_code' => 'getCurrencyCode',
        'currency_name' => 'getCurrencyName',
        'total_employees' => 'getTotalEmployees',
        'total_employees_indicator' => 'getTotalEmployeesIndicator',
        'total_employees_indicator_description' => 'getTotalEmployeesIndicatorDescription',
        'legal_form_code' => 'getLegalFormCode',
        'legal_form_description' => 'getLegalFormDescription',
        'report_date' => 'getReportDate',
        'is_out_of_business' => 'getIsOutOfBusiness',
        'is_branch' => 'getIsBranch',
        'business_registration_number' => 'getBusinessRegistrationNumber',
        'business_registration_type' => 'getBusinessRegistrationType',
        'incorporation_year' => 'getIncorporationYear',
        'trade_styles' => 'getTradeStyles',
        'enquiry_duns' => 'getEnquiryDuns',
        'sales' => 'getSales',
        'sales_estimated_description' => 'getSalesEstimatedDescription',
        'paydex_score' => 'getPaydexScore',
        'paydex_score_description' => 'getPaydexScoreDescription',
        'paydex_norm' => 'getPaydexNorm',
        'intangible_assets' => 'getIntangibleAssets',
        'max_credit_recommendation' => 'getMaxCreditRecommendation',
        'dub_rating' => 'getDubRating',
        'dub_rating_financial_strength' => 'getDubRatingFinancialStrength',
        'dub_rating_risk' => 'getDubRatingRisk',
        'dub_rating_risk_description' => 'getDubRatingRiskDescription',
        'has_open_claims' => 'getHasOpenClaims',
        'has_criminal_proceedings' => 'getHasCriminalProceedings',
        'has_disaster_event' => 'getHasDisasterEvent',
        'has_financial_embarrassment' => 'getHasFinancialEmbarrassment',
        'has_financial_legal_event' => 'getHasFinancialLegalEvent',
        'has_special_event' => 'getHasSpecialEvent',
        'has_other_event' => 'getHasOtherEvent',
        'has_secured_filings' => 'getHasSecuredFilings',
        'has_lawsuit' => 'getHasLawsuit',
        'are_employees_estimated' => 'getAreEmployeesEstimated',
        'are_sales_estimated' => 'getAreSalesEstimated'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const STATUS__0 = '0';
    const STATUS__1 = '1';
    const STATUS_DESCRIPTION_COMPANY_FOUND = 'company found';
    const STATUS_DESCRIPTION_COMPANY_NOT_FOUND = 'company not found';
    const STATUS_DESCRIPTION_INVALID_DUNS_NUMBER = 'invalid duns number';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS__0,
            self::STATUS__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusDescriptionAllowableValues()
    {
        return [
            self::STATUS_DESCRIPTION_COMPANY_FOUND,
            self::STATUS_DESCRIPTION_COMPANY_NOT_FOUND,
            self::STATUS_DESCRIPTION_INVALID_DUNS_NUMBER,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_description'] = isset($data['status_description']) ? $data['status_description'] : null;
        $this->container['duns_number'] = isset($data['duns_number']) ? $data['duns_number'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['continent_name'] = isset($data['continent_name']) ? $data['continent_name'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['country_code_3'] = isset($data['country_code_3']) ? $data['country_code_3'] : null;
        $this->container['country_name'] = isset($data['country_name']) ? $data['country_name'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['house_number'] = isset($data['house_number']) ? $data['house_number'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['fax_number'] = isset($data['fax_number']) ? $data['fax_number'] : null;
        $this->container['state_name'] = isset($data['state_name']) ? $data['state_name'] : null;
        $this->container['ceo_name'] = isset($data['ceo_name']) ? $data['ceo_name'] : null;
        $this->container['ceo_title'] = isset($data['ceo_title']) ? $data['ceo_title'] : null;
        $this->container['sic_code'] = isset($data['sic_code']) ? $data['sic_code'] : null;
        $this->container['sic_description'] = isset($data['sic_description']) ? $data['sic_description'] : null;
        $this->container['sic_version'] = isset($data['sic_version']) ? $data['sic_version'] : null;
        $this->container['year_started'] = isset($data['year_started']) ? $data['year_started'] : null;
        $this->container['net_worth'] = isset($data['net_worth']) ? $data['net_worth'] : null;
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        $this->container['currency_name'] = isset($data['currency_name']) ? $data['currency_name'] : null;
        $this->container['total_employees'] = isset($data['total_employees']) ? $data['total_employees'] : null;
        $this->container['total_employees_indicator'] = isset($data['total_employees_indicator']) ? $data['total_employees_indicator'] : null;
        $this->container['total_employees_indicator_description'] = isset($data['total_employees_indicator_description']) ? $data['total_employees_indicator_description'] : null;
        $this->container['legal_form_code'] = isset($data['legal_form_code']) ? $data['legal_form_code'] : null;
        $this->container['legal_form_description'] = isset($data['legal_form_description']) ? $data['legal_form_description'] : null;
        $this->container['report_date'] = isset($data['report_date']) ? $data['report_date'] : null;
        $this->container['is_out_of_business'] = isset($data['is_out_of_business']) ? $data['is_out_of_business'] : null;
        $this->container['is_branch'] = isset($data['is_branch']) ? $data['is_branch'] : null;
        $this->container['business_registration_number'] = isset($data['business_registration_number']) ? $data['business_registration_number'] : null;
        $this->container['business_registration_type'] = isset($data['business_registration_type']) ? $data['business_registration_type'] : null;
        $this->container['incorporation_year'] = isset($data['incorporation_year']) ? $data['incorporation_year'] : null;
        $this->container['trade_styles'] = isset($data['trade_styles']) ? $data['trade_styles'] : null;
        $this->container['enquiry_duns'] = isset($data['enquiry_duns']) ? $data['enquiry_duns'] : null;
        $this->container['sales'] = isset($data['sales']) ? $data['sales'] : null;
        $this->container['sales_estimated_description'] = isset($data['sales_estimated_description']) ? $data['sales_estimated_description'] : null;
        $this->container['paydex_score'] = isset($data['paydex_score']) ? $data['paydex_score'] : null;
        $this->container['paydex_score_description'] = isset($data['paydex_score_description']) ? $data['paydex_score_description'] : null;
        $this->container['paydex_norm'] = isset($data['paydex_norm']) ? $data['paydex_norm'] : null;
        $this->container['intangible_assets'] = isset($data['intangible_assets']) ? $data['intangible_assets'] : null;
        $this->container['max_credit_recommendation'] = isset($data['max_credit_recommendation']) ? $data['max_credit_recommendation'] : null;
        $this->container['dub_rating'] = isset($data['dub_rating']) ? $data['dub_rating'] : null;
        $this->container['dub_rating_financial_strength'] = isset($data['dub_rating_financial_strength']) ? $data['dub_rating_financial_strength'] : null;
        $this->container['dub_rating_risk'] = isset($data['dub_rating_risk']) ? $data['dub_rating_risk'] : null;
        $this->container['dub_rating_risk_description'] = isset($data['dub_rating_risk_description']) ? $data['dub_rating_risk_description'] : null;
        $this->container['has_open_claims'] = isset($data['has_open_claims']) ? $data['has_open_claims'] : null;
        $this->container['has_criminal_proceedings'] = isset($data['has_criminal_proceedings']) ? $data['has_criminal_proceedings'] : null;
        $this->container['has_disaster_event'] = isset($data['has_disaster_event']) ? $data['has_disaster_event'] : null;
        $this->container['has_financial_embarrassment'] = isset($data['has_financial_embarrassment']) ? $data['has_financial_embarrassment'] : null;
        $this->container['has_financial_legal_event'] = isset($data['has_financial_legal_event']) ? $data['has_financial_legal_event'] : null;
        $this->container['has_special_event'] = isset($data['has_special_event']) ? $data['has_special_event'] : null;
        $this->container['has_other_event'] = isset($data['has_other_event']) ? $data['has_other_event'] : null;
        $this->container['has_secured_filings'] = isset($data['has_secured_filings']) ? $data['has_secured_filings'] : null;
        $this->container['has_lawsuit'] = isset($data['has_lawsuit']) ? $data['has_lawsuit'] : null;
        $this->container['are_employees_estimated'] = isset($data['are_employees_estimated']) ? $data['are_employees_estimated'] : null;
        $this->container['are_sales_estimated'] = isset($data['are_sales_estimated']) ? $data['are_sales_estimated'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['status'] === null) {
            $invalid_properties[] = "'status' can't be null";
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status', must be one of '0', '1'.";
        }

        if ($this->container['status_description'] === null) {
            $invalid_properties[] = "'status_description' can't be null";
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['status_description'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status_description', must be one of 'company found', 'company not found', 'invalid duns number'.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['status'] === null) {
            return false;
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            return false;
        }
        if ($this->container['status_description'] === null) {
            return false;
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['status_description'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $allowed_values = array('0', '1');
        if ((!in_array($status, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status', must be one of '0', '1'");
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_description
     * @return string
     */
    public function getStatusDescription()
    {
        return $this->container['status_description'];
    }

    /**
     * Sets status_description
     * @param string $status_description
     * @return $this
     */
    public function setStatusDescription($status_description)
    {
        $allowed_values = array('company found', 'company not found', 'invalid duns number');
        if ((!in_array($status_description, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status_description', must be one of 'company found', 'company not found', 'invalid duns number'");
        }
        $this->container['status_description'] = $status_description;

        return $this;
    }

    /**
     * Gets duns_number
     * @return string
     */
    public function getDunsNumber()
    {
        return $this->container['duns_number'];
    }

    /**
     * Sets duns_number
     * @param string $duns_number
     * @return $this
     */
    public function setDunsNumber($duns_number)
    {
        $this->container['duns_number'] = $duns_number;

        return $this;
    }

    /**
     * Gets company_name
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     * @param string $company_name
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets continent_name
     * @return string
     */
    public function getContinentName()
    {
        return $this->container['continent_name'];
    }

    /**
     * Sets continent_name
     * @param string $continent_name
     * @return $this
     */
    public function setContinentName($continent_name)
    {
        $this->container['continent_name'] = $continent_name;

        return $this;
    }

    /**
     * Gets country_code
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     * @param string $country_code
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets country_code_3
     * @return string
     */
    public function getCountryCode3()
    {
        return $this->container['country_code_3'];
    }

    /**
     * Sets country_code_3
     * @param string $country_code_3
     * @return $this
     */
    public function setCountryCode3($country_code_3)
    {
        $this->container['country_code_3'] = $country_code_3;

        return $this;
    }

    /**
     * Gets country_name
     * @return string
     */
    public function getCountryName()
    {
        return $this->container['country_name'];
    }

    /**
     * Sets country_name
     * @param string $country_name
     * @return $this
     */
    public function setCountryName($country_name)
    {
        $this->container['country_name'] = $country_name;

        return $this;
    }

    /**
     * Gets zip
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     * @param string $zip
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets street
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     * @param string $street
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets house_number
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['house_number'];
    }

    /**
     * Sets house_number
     * @param string $house_number
     * @return $this
     */
    public function setHouseNumber($house_number)
    {
        $this->container['house_number'] = $house_number;

        return $this;
    }

    /**
     * Gets phone_number
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     * @param string $phone_number
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets fax_number
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['fax_number'];
    }

    /**
     * Sets fax_number
     * @param string $fax_number
     * @return $this
     */
    public function setFaxNumber($fax_number)
    {
        $this->container['fax_number'] = $fax_number;

        return $this;
    }

    /**
     * Gets state_name
     * @return string
     */
    public function getStateName()
    {
        return $this->container['state_name'];
    }

    /**
     * Sets state_name
     * @param string $state_name
     * @return $this
     */
    public function setStateName($state_name)
    {
        $this->container['state_name'] = $state_name;

        return $this;
    }

    /**
     * Gets ceo_name
     * @return string
     */
    public function getCeoName()
    {
        return $this->container['ceo_name'];
    }

    /**
     * Sets ceo_name
     * @param string $ceo_name
     * @return $this
     */
    public function setCeoName($ceo_name)
    {
        $this->container['ceo_name'] = $ceo_name;

        return $this;
    }

    /**
     * Gets ceo_title
     * @return string
     */
    public function getCeoTitle()
    {
        return $this->container['ceo_title'];
    }

    /**
     * Sets ceo_title
     * @param string $ceo_title
     * @return $this
     */
    public function setCeoTitle($ceo_title)
    {
        $this->container['ceo_title'] = $ceo_title;

        return $this;
    }

    /**
     * Gets sic_code
     * @return string
     */
    public function getSicCode()
    {
        return $this->container['sic_code'];
    }

    /**
     * Sets sic_code
     * @param string $sic_code
     * @return $this
     */
    public function setSicCode($sic_code)
    {
        $this->container['sic_code'] = $sic_code;

        return $this;
    }

    /**
     * Gets sic_description
     * @return string
     */
    public function getSicDescription()
    {
        return $this->container['sic_description'];
    }

    /**
     * Sets sic_description
     * @param string $sic_description
     * @return $this
     */
    public function setSicDescription($sic_description)
    {
        $this->container['sic_description'] = $sic_description;

        return $this;
    }

    /**
     * Gets sic_version
     * @return string
     */
    public function getSicVersion()
    {
        return $this->container['sic_version'];
    }

    /**
     * Sets sic_version
     * @param string $sic_version
     * @return $this
     */
    public function setSicVersion($sic_version)
    {
        $this->container['sic_version'] = $sic_version;

        return $this;
    }

    /**
     * Gets year_started
     * @return string
     */
    public function getYearStarted()
    {
        return $this->container['year_started'];
    }

    /**
     * Sets year_started
     * @param string $year_started
     * @return $this
     */
    public function setYearStarted($year_started)
    {
        $this->container['year_started'] = $year_started;

        return $this;
    }

    /**
     * Gets net_worth
     * @return int
     */
    public function getNetWorth()
    {
        return $this->container['net_worth'];
    }

    /**
     * Sets net_worth
     * @param int $net_worth
     * @return $this
     */
    public function setNetWorth($net_worth)
    {
        $this->container['net_worth'] = $net_worth;

        return $this;
    }

    /**
     * Gets currency_code
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     * @param string $currency_code
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets currency_name
     * @return string
     */
    public function getCurrencyName()
    {
        return $this->container['currency_name'];
    }

    /**
     * Sets currency_name
     * @param string $currency_name
     * @return $this
     */
    public function setCurrencyName($currency_name)
    {
        $this->container['currency_name'] = $currency_name;

        return $this;
    }

    /**
     * Gets total_employees
     * @return int
     */
    public function getTotalEmployees()
    {
        return $this->container['total_employees'];
    }

    /**
     * Sets total_employees
     * @param int $total_employees
     * @return $this
     */
    public function setTotalEmployees($total_employees)
    {
        $this->container['total_employees'] = $total_employees;

        return $this;
    }

    /**
     * Gets total_employees_indicator
     * @return string
     */
    public function getTotalEmployeesIndicator()
    {
        return $this->container['total_employees_indicator'];
    }

    /**
     * Sets total_employees_indicator
     * @param string $total_employees_indicator
     * @return $this
     */
    public function setTotalEmployeesIndicator($total_employees_indicator)
    {
        $this->container['total_employees_indicator'] = $total_employees_indicator;

        return $this;
    }

    /**
     * Gets total_employees_indicator_description
     * @return string
     */
    public function getTotalEmployeesIndicatorDescription()
    {
        return $this->container['total_employees_indicator_description'];
    }

    /**
     * Sets total_employees_indicator_description
     * @param string $total_employees_indicator_description
     * @return $this
     */
    public function setTotalEmployeesIndicatorDescription($total_employees_indicator_description)
    {
        $this->container['total_employees_indicator_description'] = $total_employees_indicator_description;

        return $this;
    }

    /**
     * Gets legal_form_code
     * @return int
     */
    public function getLegalFormCode()
    {
        return $this->container['legal_form_code'];
    }

    /**
     * Sets legal_form_code
     * @param int $legal_form_code
     * @return $this
     */
    public function setLegalFormCode($legal_form_code)
    {
        $this->container['legal_form_code'] = $legal_form_code;

        return $this;
    }

    /**
     * Gets legal_form_description
     * @return string
     */
    public function getLegalFormDescription()
    {
        return $this->container['legal_form_description'];
    }

    /**
     * Sets legal_form_description
     * @param string $legal_form_description
     * @return $this
     */
    public function setLegalFormDescription($legal_form_description)
    {
        $this->container['legal_form_description'] = $legal_form_description;

        return $this;
    }

    /**
     * Gets report_date
     * @return \DateTime
     */
    public function getReportDate()
    {
        return $this->container['report_date'];
    }

    /**
     * Sets report_date
     * @param \DateTime $report_date
     * @return $this
     */
    public function setReportDate($report_date)
    {
        $this->container['report_date'] = $report_date;

        return $this;
    }

    /**
     * Gets is_out_of_business
     * @return bool
     */
    public function getIsOutOfBusiness()
    {
        return $this->container['is_out_of_business'];
    }

    /**
     * Sets is_out_of_business
     * @param bool $is_out_of_business
     * @return $this
     */
    public function setIsOutOfBusiness($is_out_of_business)
    {
        $this->container['is_out_of_business'] = $is_out_of_business;

        return $this;
    }

    /**
     * Gets is_branch
     * @return bool
     */
    public function getIsBranch()
    {
        return $this->container['is_branch'];
    }

    /**
     * Sets is_branch
     * @param bool $is_branch
     * @return $this
     */
    public function setIsBranch($is_branch)
    {
        $this->container['is_branch'] = $is_branch;

        return $this;
    }

    /**
     * Gets business_registration_number
     * @return string
     */
    public function getBusinessRegistrationNumber()
    {
        return $this->container['business_registration_number'];
    }

    /**
     * Sets business_registration_number
     * @param string $business_registration_number
     * @return $this
     */
    public function setBusinessRegistrationNumber($business_registration_number)
    {
        $this->container['business_registration_number'] = $business_registration_number;

        return $this;
    }

    /**
     * Gets business_registration_type
     * @return string
     */
    public function getBusinessRegistrationType()
    {
        return $this->container['business_registration_type'];
    }

    /**
     * Sets business_registration_type
     * @param string $business_registration_type
     * @return $this
     */
    public function setBusinessRegistrationType($business_registration_type)
    {
        $this->container['business_registration_type'] = $business_registration_type;

        return $this;
    }

    /**
     * Gets incorporation_year
     * @return string
     */
    public function getIncorporationYear()
    {
        return $this->container['incorporation_year'];
    }

    /**
     * Sets incorporation_year
     * @param string $incorporation_year
     * @return $this
     */
    public function setIncorporationYear($incorporation_year)
    {
        $this->container['incorporation_year'] = $incorporation_year;

        return $this;
    }

    /**
     * Gets trade_styles
     * @return string[]
     */
    public function getTradeStyles()
    {
        return $this->container['trade_styles'];
    }

    /**
     * Sets trade_styles
     * @param string[] $trade_styles
     * @return $this
     */
    public function setTradeStyles($trade_styles)
    {
        $this->container['trade_styles'] = $trade_styles;

        return $this;
    }

    /**
     * Gets enquiry_duns
     * @return string
     */
    public function getEnquiryDuns()
    {
        return $this->container['enquiry_duns'];
    }

    /**
     * Sets enquiry_duns
     * @param string $enquiry_duns
     * @return $this
     */
    public function setEnquiryDuns($enquiry_duns)
    {
        $this->container['enquiry_duns'] = $enquiry_duns;

        return $this;
    }

    /**
     * Gets sales
     * @return int
     */
    public function getSales()
    {
        return $this->container['sales'];
    }

    /**
     * Sets sales
     * @param int $sales
     * @return $this
     */
    public function setSales($sales)
    {
        $this->container['sales'] = $sales;

        return $this;
    }

    /**
     * Gets sales_estimated_description
     * @return string
     */
    public function getSalesEstimatedDescription()
    {
        return $this->container['sales_estimated_description'];
    }

    /**
     * Sets sales_estimated_description
     * @param string $sales_estimated_description
     * @return $this
     */
    public function setSalesEstimatedDescription($sales_estimated_description)
    {
        $this->container['sales_estimated_description'] = $sales_estimated_description;

        return $this;
    }

    /**
     * Gets paydex_score
     * @return int
     */
    public function getPaydexScore()
    {
        return $this->container['paydex_score'];
    }

    /**
     * Sets paydex_score
     * @param int $paydex_score
     * @return $this
     */
    public function setPaydexScore($paydex_score)
    {
        $this->container['paydex_score'] = $paydex_score;

        return $this;
    }

    /**
     * Gets paydex_score_description
     * @return string
     */
    public function getPaydexScoreDescription()
    {
        return $this->container['paydex_score_description'];
    }

    /**
     * Sets paydex_score_description
     * @param string $paydex_score_description
     * @return $this
     */
    public function setPaydexScoreDescription($paydex_score_description)
    {
        $this->container['paydex_score_description'] = $paydex_score_description;

        return $this;
    }

    /**
     * Gets paydex_norm
     * @return int
     */
    public function getPaydexNorm()
    {
        return $this->container['paydex_norm'];
    }

    /**
     * Sets paydex_norm
     * @param int $paydex_norm
     * @return $this
     */
    public function setPaydexNorm($paydex_norm)
    {
        $this->container['paydex_norm'] = $paydex_norm;

        return $this;
    }

    /**
     * Gets intangible_assets
     * @return int
     */
    public function getIntangibleAssets()
    {
        return $this->container['intangible_assets'];
    }

    /**
     * Sets intangible_assets
     * @param int $intangible_assets
     * @return $this
     */
    public function setIntangibleAssets($intangible_assets)
    {
        $this->container['intangible_assets'] = $intangible_assets;

        return $this;
    }

    /**
     * Gets max_credit_recommendation
     * @return int
     */
    public function getMaxCreditRecommendation()
    {
        return $this->container['max_credit_recommendation'];
    }

    /**
     * Sets max_credit_recommendation
     * @param int $max_credit_recommendation
     * @return $this
     */
    public function setMaxCreditRecommendation($max_credit_recommendation)
    {
        $this->container['max_credit_recommendation'] = $max_credit_recommendation;

        return $this;
    }

    /**
     * Gets dub_rating
     * @return string
     */
    public function getDubRating()
    {
        return $this->container['dub_rating'];
    }

    /**
     * Sets dub_rating
     * @param string $dub_rating
     * @return $this
     */
    public function setDubRating($dub_rating)
    {
        $this->container['dub_rating'] = $dub_rating;

        return $this;
    }

    /**
     * Gets dub_rating_financial_strength
     * @return string
     */
    public function getDubRatingFinancialStrength()
    {
        return $this->container['dub_rating_financial_strength'];
    }

    /**
     * Sets dub_rating_financial_strength
     * @param string $dub_rating_financial_strength
     * @return $this
     */
    public function setDubRatingFinancialStrength($dub_rating_financial_strength)
    {
        $this->container['dub_rating_financial_strength'] = $dub_rating_financial_strength;

        return $this;
    }

    /**
     * Gets dub_rating_risk
     * @return string
     */
    public function getDubRatingRisk()
    {
        return $this->container['dub_rating_risk'];
    }

    /**
     * Sets dub_rating_risk
     * @param string $dub_rating_risk
     * @return $this
     */
    public function setDubRatingRisk($dub_rating_risk)
    {
        $this->container['dub_rating_risk'] = $dub_rating_risk;

        return $this;
    }

    /**
     * Gets dub_rating_risk_description
     * @return string
     */
    public function getDubRatingRiskDescription()
    {
        return $this->container['dub_rating_risk_description'];
    }

    /**
     * Sets dub_rating_risk_description
     * @param string $dub_rating_risk_description
     * @return $this
     */
    public function setDubRatingRiskDescription($dub_rating_risk_description)
    {
        $this->container['dub_rating_risk_description'] = $dub_rating_risk_description;

        return $this;
    }

    /**
     * Gets has_open_claims
     * @return bool
     */
    public function getHasOpenClaims()
    {
        return $this->container['has_open_claims'];
    }

    /**
     * Sets has_open_claims
     * @param bool $has_open_claims
     * @return $this
     */
    public function setHasOpenClaims($has_open_claims)
    {
        $this->container['has_open_claims'] = $has_open_claims;

        return $this;
    }

    /**
     * Gets has_criminal_proceedings
     * @return bool
     */
    public function getHasCriminalProceedings()
    {
        return $this->container['has_criminal_proceedings'];
    }

    /**
     * Sets has_criminal_proceedings
     * @param bool $has_criminal_proceedings
     * @return $this
     */
    public function setHasCriminalProceedings($has_criminal_proceedings)
    {
        $this->container['has_criminal_proceedings'] = $has_criminal_proceedings;

        return $this;
    }

    /**
     * Gets has_disaster_event
     * @return bool
     */
    public function getHasDisasterEvent()
    {
        return $this->container['has_disaster_event'];
    }

    /**
     * Sets has_disaster_event
     * @param bool $has_disaster_event
     * @return $this
     */
    public function setHasDisasterEvent($has_disaster_event)
    {
        $this->container['has_disaster_event'] = $has_disaster_event;

        return $this;
    }

    /**
     * Gets has_financial_embarrassment
     * @return bool
     */
    public function getHasFinancialEmbarrassment()
    {
        return $this->container['has_financial_embarrassment'];
    }

    /**
     * Sets has_financial_embarrassment
     * @param bool $has_financial_embarrassment
     * @return $this
     */
    public function setHasFinancialEmbarrassment($has_financial_embarrassment)
    {
        $this->container['has_financial_embarrassment'] = $has_financial_embarrassment;

        return $this;
    }

    /**
     * Gets has_financial_legal_event
     * @return bool
     */
    public function getHasFinancialLegalEvent()
    {
        return $this->container['has_financial_legal_event'];
    }

    /**
     * Sets has_financial_legal_event
     * @param bool $has_financial_legal_event
     * @return $this
     */
    public function setHasFinancialLegalEvent($has_financial_legal_event)
    {
        $this->container['has_financial_legal_event'] = $has_financial_legal_event;

        return $this;
    }

    /**
     * Gets has_special_event
     * @return bool
     */
    public function getHasSpecialEvent()
    {
        return $this->container['has_special_event'];
    }

    /**
     * Sets has_special_event
     * @param bool $has_special_event
     * @return $this
     */
    public function setHasSpecialEvent($has_special_event)
    {
        $this->container['has_special_event'] = $has_special_event;

        return $this;
    }

    /**
     * Gets has_other_event
     * @return bool
     */
    public function getHasOtherEvent()
    {
        return $this->container['has_other_event'];
    }

    /**
     * Sets has_other_event
     * @param bool $has_other_event
     * @return $this
     */
    public function setHasOtherEvent($has_other_event)
    {
        $this->container['has_other_event'] = $has_other_event;

        return $this;
    }

    /**
     * Gets has_secured_filings
     * @return bool
     */
    public function getHasSecuredFilings()
    {
        return $this->container['has_secured_filings'];
    }

    /**
     * Sets has_secured_filings
     * @param bool $has_secured_filings
     * @return $this
     */
    public function setHasSecuredFilings($has_secured_filings)
    {
        $this->container['has_secured_filings'] = $has_secured_filings;

        return $this;
    }

    /**
     * Gets has_lawsuit
     * @return bool
     */
    public function getHasLawsuit()
    {
        return $this->container['has_lawsuit'];
    }

    /**
     * Sets has_lawsuit
     * @param bool $has_lawsuit
     * @return $this
     */
    public function setHasLawsuit($has_lawsuit)
    {
        $this->container['has_lawsuit'] = $has_lawsuit;

        return $this;
    }

    /**
     * Gets are_employees_estimated
     * @return bool
     */
    public function getAreEmployeesEstimated()
    {
        return $this->container['are_employees_estimated'];
    }

    /**
     * Sets are_employees_estimated
     * @param bool $are_employees_estimated
     * @return $this
     */
    public function setAreEmployeesEstimated($are_employees_estimated)
    {
        $this->container['are_employees_estimated'] = $are_employees_estimated;

        return $this;
    }

    /**
     * Gets are_sales_estimated
     * @return bool
     */
    public function getAreSalesEstimated()
    {
        return $this->container['are_sales_estimated'];
    }

    /**
     * Sets are_sales_estimated
     * @param bool $are_sales_estimated
     * @return $this
     */
    public function setAreSalesEstimated($are_sales_estimated)
    {
        $this->container['are_sales_estimated'] = $are_sales_estimated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this));
    }
}
