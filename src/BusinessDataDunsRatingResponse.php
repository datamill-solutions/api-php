<?php
/**
 * BusinessDataDunsRatingResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  DataMill
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * /data.mill for applications
 *
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.
 *
 * OpenAPI spec version: 1.6.4
 * Contact: info@datamill.solutions
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace DataMill;

use \ArrayAccess;

/**
 * BusinessDataDunsRatingResponse Class Doc Comment
 *
 * @category    Class */
 // @description Response of successful transformation request for /business-data/duns/rating
/**
 * @package     DataMill
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BusinessDataDunsRatingResponse implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'BusinessDataDunsRatingResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'status' => 'string',
        'statusDescription' => 'string',
        'dunsNumber' => 'string',
        'companyName' => 'string',
        'continentName' => 'string',
        'countryCode' => 'string',
        'countryCode3' => 'string',
        'countryName' => 'string',
        'zip' => 'string',
        'city' => 'string',
        'street' => 'string',
        'houseNumber' => 'string',
        'phoneNumber' => 'string',
        'faxNumber' => 'string',
        'stateName' => 'string',
        'ceoName' => 'string',
        'ceoTitle' => 'string',
        'sicCode' => 'string',
        'sicDescription' => 'string',
        'sicVersion' => 'string',
        'yearStarted' => 'string',
        'netWorth' => 'int',
        'currencyCode' => 'string',
        'currencyName' => 'string',
        'totalEmployees' => 'int',
        'totalEmployeesIndicator' => 'string',
        'totalEmployeesIndicatorDescription' => 'string',
        'legalFormCode' => 'int',
        'legalFormDescription' => 'string',
        'reportDate' => '\DateTime',
        'isOutOfBusiness' => 'bool',
        'isBranch' => 'bool',
        'businessRegistrationNumber' => 'string',
        'businessRegistrationType' => 'string',
        'incorporationYear' => 'string',
        'tradeStyles' => 'string[]',
        'enquiryDuns' => 'string',
        'sales' => 'int',
        'salesEstimatedDescription' => 'string',
        'paydexScore' => 'int',
        'paydexScoreDescription' => 'string',
        'paydexNorm' => 'int',
        'intangibleAssets' => 'int',
        'maxCreditRecommendation' => 'int',
        'dubRating' => 'string',
        'dubRatingFinancialStrength' => 'string',
        'dubRatingRisk' => 'string',
        'dubRatingRiskDescription' => 'string',
        'hasOpenClaims' => 'bool',
        'hasCriminalProceedings' => 'bool',
        'hasDisasterEvent' => 'bool',
        'hasFinancialEmbarrassment' => 'bool',
        'hasFinancialLegalEvent' => 'bool',
        'hasSpecialEvent' => 'bool',
        'hasOtherEvent' => 'bool',
        'hasSecuredFilings' => 'bool',
        'hasLawsuit' => 'bool',
        'areEmployeesEstimated' => 'bool',
        'areSalesEstimated' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'status' => 'status',
        'statusDescription' => 'status_description',
        'dunsNumber' => 'duns_number',
        'companyName' => 'company_name',
        'continentName' => 'continent_name',
        'countryCode' => 'country_code',
        'countryCode3' => 'country_code_3',
        'countryName' => 'country_name',
        'zip' => 'zip',
        'city' => 'city',
        'street' => 'street',
        'houseNumber' => 'house_number',
        'phoneNumber' => 'phone_number',
        'faxNumber' => 'fax_number',
        'stateName' => 'state_name',
        'ceoName' => 'ceo_name',
        'ceoTitle' => 'ceo_title',
        'sicCode' => 'sic_code',
        'sicDescription' => 'sic_description',
        'sicVersion' => 'sic_version',
        'yearStarted' => 'year_started',
        'netWorth' => 'net_worth',
        'currencyCode' => 'currency_code',
        'currencyName' => 'currency_name',
        'totalEmployees' => 'total_employees',
        'totalEmployeesIndicator' => 'total_employees_indicator',
        'totalEmployeesIndicatorDescription' => 'total_employees_indicator_description',
        'legalFormCode' => 'legal_form_code',
        'legalFormDescription' => 'legal_form_description',
        'reportDate' => 'report_date',
        'isOutOfBusiness' => 'is_out_of_business',
        'isBranch' => 'is_branch',
        'businessRegistrationNumber' => 'business_registration_number',
        'businessRegistrationType' => 'business_registration_type',
        'incorporationYear' => 'incorporation_year',
        'tradeStyles' => 'trade_styles',
        'enquiryDuns' => 'enquiry_duns',
        'sales' => 'sales',
        'salesEstimatedDescription' => 'sales_estimated_description',
        'paydexScore' => 'paydex_score',
        'paydexScoreDescription' => 'paydex_score_description',
        'paydexNorm' => 'paydex_norm',
        'intangibleAssets' => 'intangible_assets',
        'maxCreditRecommendation' => 'max_credit_recommendation',
        'dubRating' => 'dub_rating',
        'dubRatingFinancialStrength' => 'dub_rating_financial_strength',
        'dubRatingRisk' => 'dub_rating_risk',
        'dubRatingRiskDescription' => 'dub_rating_risk_description',
        'hasOpenClaims' => 'has_open_claims',
        'hasCriminalProceedings' => 'has_criminal_proceedings',
        'hasDisasterEvent' => 'has_disaster_event',
        'hasFinancialEmbarrassment' => 'has_financial_embarrassment',
        'hasFinancialLegalEvent' => 'has_financial_legal_event',
        'hasSpecialEvent' => 'has_special_event',
        'hasOtherEvent' => 'has_other_event',
        'hasSecuredFilings' => 'has_secured_filings',
        'hasLawsuit' => 'has_lawsuit',
        'areEmployeesEstimated' => 'are_employees_estimated',
        'areSalesEstimated' => 'are_sales_estimated'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'status' => 'setStatus',
        'statusDescription' => 'setStatusDescription',
        'dunsNumber' => 'setDunsNumber',
        'companyName' => 'setCompanyName',
        'continentName' => 'setContinentName',
        'countryCode' => 'setCountryCode',
        'countryCode3' => 'setCountryCode3',
        'countryName' => 'setCountryName',
        'zip' => 'setZip',
        'city' => 'setCity',
        'street' => 'setStreet',
        'houseNumber' => 'setHouseNumber',
        'phoneNumber' => 'setPhoneNumber',
        'faxNumber' => 'setFaxNumber',
        'stateName' => 'setStateName',
        'ceoName' => 'setCeoName',
        'ceoTitle' => 'setCeoTitle',
        'sicCode' => 'setSicCode',
        'sicDescription' => 'setSicDescription',
        'sicVersion' => 'setSicVersion',
        'yearStarted' => 'setYearStarted',
        'netWorth' => 'setNetWorth',
        'currencyCode' => 'setCurrencyCode',
        'currencyName' => 'setCurrencyName',
        'totalEmployees' => 'setTotalEmployees',
        'totalEmployeesIndicator' => 'setTotalEmployeesIndicator',
        'totalEmployeesIndicatorDescription' => 'setTotalEmployeesIndicatorDescription',
        'legalFormCode' => 'setLegalFormCode',
        'legalFormDescription' => 'setLegalFormDescription',
        'reportDate' => 'setReportDate',
        'isOutOfBusiness' => 'setIsOutOfBusiness',
        'isBranch' => 'setIsBranch',
        'businessRegistrationNumber' => 'setBusinessRegistrationNumber',
        'businessRegistrationType' => 'setBusinessRegistrationType',
        'incorporationYear' => 'setIncorporationYear',
        'tradeStyles' => 'setTradeStyles',
        'enquiryDuns' => 'setEnquiryDuns',
        'sales' => 'setSales',
        'salesEstimatedDescription' => 'setSalesEstimatedDescription',
        'paydexScore' => 'setPaydexScore',
        'paydexScoreDescription' => 'setPaydexScoreDescription',
        'paydexNorm' => 'setPaydexNorm',
        'intangibleAssets' => 'setIntangibleAssets',
        'maxCreditRecommendation' => 'setMaxCreditRecommendation',
        'dubRating' => 'setDubRating',
        'dubRatingFinancialStrength' => 'setDubRatingFinancialStrength',
        'dubRatingRisk' => 'setDubRatingRisk',
        'dubRatingRiskDescription' => 'setDubRatingRiskDescription',
        'hasOpenClaims' => 'setHasOpenClaims',
        'hasCriminalProceedings' => 'setHasCriminalProceedings',
        'hasDisasterEvent' => 'setHasDisasterEvent',
        'hasFinancialEmbarrassment' => 'setHasFinancialEmbarrassment',
        'hasFinancialLegalEvent' => 'setHasFinancialLegalEvent',
        'hasSpecialEvent' => 'setHasSpecialEvent',
        'hasOtherEvent' => 'setHasOtherEvent',
        'hasSecuredFilings' => 'setHasSecuredFilings',
        'hasLawsuit' => 'setHasLawsuit',
        'areEmployeesEstimated' => 'setAreEmployeesEstimated',
        'areSalesEstimated' => 'setAreSalesEstimated'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'status' => 'getStatus',
        'statusDescription' => 'getStatusDescription',
        'dunsNumber' => 'getDunsNumber',
        'companyName' => 'getCompanyName',
        'continentName' => 'getContinentName',
        'countryCode' => 'getCountryCode',
        'countryCode3' => 'getCountryCode3',
        'countryName' => 'getCountryName',
        'zip' => 'getZip',
        'city' => 'getCity',
        'street' => 'getStreet',
        'houseNumber' => 'getHouseNumber',
        'phoneNumber' => 'getPhoneNumber',
        'faxNumber' => 'getFaxNumber',
        'stateName' => 'getStateName',
        'ceoName' => 'getCeoName',
        'ceoTitle' => 'getCeoTitle',
        'sicCode' => 'getSicCode',
        'sicDescription' => 'getSicDescription',
        'sicVersion' => 'getSicVersion',
        'yearStarted' => 'getYearStarted',
        'netWorth' => 'getNetWorth',
        'currencyCode' => 'getCurrencyCode',
        'currencyName' => 'getCurrencyName',
        'totalEmployees' => 'getTotalEmployees',
        'totalEmployeesIndicator' => 'getTotalEmployeesIndicator',
        'totalEmployeesIndicatorDescription' => 'getTotalEmployeesIndicatorDescription',
        'legalFormCode' => 'getLegalFormCode',
        'legalFormDescription' => 'getLegalFormDescription',
        'reportDate' => 'getReportDate',
        'isOutOfBusiness' => 'getIsOutOfBusiness',
        'isBranch' => 'getIsBranch',
        'businessRegistrationNumber' => 'getBusinessRegistrationNumber',
        'businessRegistrationType' => 'getBusinessRegistrationType',
        'incorporationYear' => 'getIncorporationYear',
        'tradeStyles' => 'getTradeStyles',
        'enquiryDuns' => 'getEnquiryDuns',
        'sales' => 'getSales',
        'salesEstimatedDescription' => 'getSalesEstimatedDescription',
        'paydexScore' => 'getPaydexScore',
        'paydexScoreDescription' => 'getPaydexScoreDescription',
        'paydexNorm' => 'getPaydexNorm',
        'intangibleAssets' => 'getIntangibleAssets',
        'maxCreditRecommendation' => 'getMaxCreditRecommendation',
        'dubRating' => 'getDubRating',
        'dubRatingFinancialStrength' => 'getDubRatingFinancialStrength',
        'dubRatingRisk' => 'getDubRatingRisk',
        'dubRatingRiskDescription' => 'getDubRatingRiskDescription',
        'hasOpenClaims' => 'getHasOpenClaims',
        'hasCriminalProceedings' => 'getHasCriminalProceedings',
        'hasDisasterEvent' => 'getHasDisasterEvent',
        'hasFinancialEmbarrassment' => 'getHasFinancialEmbarrassment',
        'hasFinancialLegalEvent' => 'getHasFinancialLegalEvent',
        'hasSpecialEvent' => 'getHasSpecialEvent',
        'hasOtherEvent' => 'getHasOtherEvent',
        'hasSecuredFilings' => 'getHasSecuredFilings',
        'hasLawsuit' => 'getHasLawsuit',
        'areEmployeesEstimated' => 'getAreEmployeesEstimated',
        'areSalesEstimated' => 'getAreSalesEstimated'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const STATUS__0 = '0';
    const STATUS__1 = '1';
    const STATUS_DESCRIPTION_COMPANY_FOUND = 'company found';
    const STATUS_DESCRIPTION_COMPANY_NOT_FOUND = 'company not found';
    const STATUS_DESCRIPTION_INVALID_DUNS_NUMBER = 'invalid duns number';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS__0,
            self::STATUS__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusDescriptionAllowableValues()
    {
        return [
            self::STATUS_DESCRIPTION_COMPANY_FOUND,
            self::STATUS_DESCRIPTION_COMPANY_NOT_FOUND,
            self::STATUS_DESCRIPTION_INVALID_DUNS_NUMBER,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['statusDescription'] = isset($data['statusDescription']) ? $data['statusDescription'] : null;
        $this->container['dunsNumber'] = isset($data['dunsNumber']) ? $data['dunsNumber'] : null;
        $this->container['companyName'] = isset($data['companyName']) ? $data['companyName'] : null;
        $this->container['continentName'] = isset($data['continentName']) ? $data['continentName'] : null;
        $this->container['countryCode'] = isset($data['countryCode']) ? $data['countryCode'] : null;
        $this->container['countryCode3'] = isset($data['countryCode3']) ? $data['countryCode3'] : null;
        $this->container['countryName'] = isset($data['countryName']) ? $data['countryName'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['houseNumber'] = isset($data['houseNumber']) ? $data['houseNumber'] : null;
        $this->container['phoneNumber'] = isset($data['phoneNumber']) ? $data['phoneNumber'] : null;
        $this->container['faxNumber'] = isset($data['faxNumber']) ? $data['faxNumber'] : null;
        $this->container['stateName'] = isset($data['stateName']) ? $data['stateName'] : null;
        $this->container['ceoName'] = isset($data['ceoName']) ? $data['ceoName'] : null;
        $this->container['ceoTitle'] = isset($data['ceoTitle']) ? $data['ceoTitle'] : null;
        $this->container['sicCode'] = isset($data['sicCode']) ? $data['sicCode'] : null;
        $this->container['sicDescription'] = isset($data['sicDescription']) ? $data['sicDescription'] : null;
        $this->container['sicVersion'] = isset($data['sicVersion']) ? $data['sicVersion'] : null;
        $this->container['yearStarted'] = isset($data['yearStarted']) ? $data['yearStarted'] : null;
        $this->container['netWorth'] = isset($data['netWorth']) ? $data['netWorth'] : null;
        $this->container['currencyCode'] = isset($data['currencyCode']) ? $data['currencyCode'] : null;
        $this->container['currencyName'] = isset($data['currencyName']) ? $data['currencyName'] : null;
        $this->container['totalEmployees'] = isset($data['totalEmployees']) ? $data['totalEmployees'] : null;
        $this->container['totalEmployeesIndicator'] = isset($data['totalEmployeesIndicator']) ? $data['totalEmployeesIndicator'] : null;
        $this->container['totalEmployeesIndicatorDescription'] = isset($data['totalEmployeesIndicatorDescription']) ? $data['totalEmployeesIndicatorDescription'] : null;
        $this->container['legalFormCode'] = isset($data['legalFormCode']) ? $data['legalFormCode'] : null;
        $this->container['legalFormDescription'] = isset($data['legalFormDescription']) ? $data['legalFormDescription'] : null;
        $this->container['reportDate'] = isset($data['reportDate']) ? $data['reportDate'] : null;
        $this->container['isOutOfBusiness'] = isset($data['isOutOfBusiness']) ? $data['isOutOfBusiness'] : null;
        $this->container['isBranch'] = isset($data['isBranch']) ? $data['isBranch'] : null;
        $this->container['businessRegistrationNumber'] = isset($data['businessRegistrationNumber']) ? $data['businessRegistrationNumber'] : null;
        $this->container['businessRegistrationType'] = isset($data['businessRegistrationType']) ? $data['businessRegistrationType'] : null;
        $this->container['incorporationYear'] = isset($data['incorporationYear']) ? $data['incorporationYear'] : null;
        $this->container['tradeStyles'] = isset($data['tradeStyles']) ? $data['tradeStyles'] : null;
        $this->container['enquiryDuns'] = isset($data['enquiryDuns']) ? $data['enquiryDuns'] : null;
        $this->container['sales'] = isset($data['sales']) ? $data['sales'] : null;
        $this->container['salesEstimatedDescription'] = isset($data['salesEstimatedDescription']) ? $data['salesEstimatedDescription'] : null;
        $this->container['paydexScore'] = isset($data['paydexScore']) ? $data['paydexScore'] : null;
        $this->container['paydexScoreDescription'] = isset($data['paydexScoreDescription']) ? $data['paydexScoreDescription'] : null;
        $this->container['paydexNorm'] = isset($data['paydexNorm']) ? $data['paydexNorm'] : null;
        $this->container['intangibleAssets'] = isset($data['intangibleAssets']) ? $data['intangibleAssets'] : null;
        $this->container['maxCreditRecommendation'] = isset($data['maxCreditRecommendation']) ? $data['maxCreditRecommendation'] : null;
        $this->container['dubRating'] = isset($data['dubRating']) ? $data['dubRating'] : null;
        $this->container['dubRatingFinancialStrength'] = isset($data['dubRatingFinancialStrength']) ? $data['dubRatingFinancialStrength'] : null;
        $this->container['dubRatingRisk'] = isset($data['dubRatingRisk']) ? $data['dubRatingRisk'] : null;
        $this->container['dubRatingRiskDescription'] = isset($data['dubRatingRiskDescription']) ? $data['dubRatingRiskDescription'] : null;
        $this->container['hasOpenClaims'] = isset($data['hasOpenClaims']) ? $data['hasOpenClaims'] : null;
        $this->container['hasCriminalProceedings'] = isset($data['hasCriminalProceedings']) ? $data['hasCriminalProceedings'] : null;
        $this->container['hasDisasterEvent'] = isset($data['hasDisasterEvent']) ? $data['hasDisasterEvent'] : null;
        $this->container['hasFinancialEmbarrassment'] = isset($data['hasFinancialEmbarrassment']) ? $data['hasFinancialEmbarrassment'] : null;
        $this->container['hasFinancialLegalEvent'] = isset($data['hasFinancialLegalEvent']) ? $data['hasFinancialLegalEvent'] : null;
        $this->container['hasSpecialEvent'] = isset($data['hasSpecialEvent']) ? $data['hasSpecialEvent'] : null;
        $this->container['hasOtherEvent'] = isset($data['hasOtherEvent']) ? $data['hasOtherEvent'] : null;
        $this->container['hasSecuredFilings'] = isset($data['hasSecuredFilings']) ? $data['hasSecuredFilings'] : null;
        $this->container['hasLawsuit'] = isset($data['hasLawsuit']) ? $data['hasLawsuit'] : null;
        $this->container['areEmployeesEstimated'] = isset($data['areEmployeesEstimated']) ? $data['areEmployeesEstimated'] : null;
        $this->container['areSalesEstimated'] = isset($data['areSalesEstimated']) ? $data['areSalesEstimated'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['status'] === null) {
            $invalid_properties[] = "'status' can't be null";
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status', must be one of '0', '1'.";
        }

        if ($this->container['statusDescription'] === null) {
            $invalid_properties[] = "'statusDescription' can't be null";
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['statusDescription'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'statusDescription', must be one of 'company found', 'company not found', 'invalid duns number'.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['status'] === null) {
            return false;
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            return false;
        }
        if ($this->container['statusDescription'] === null) {
            return false;
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['statusDescription'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $allowed_values = array('0', '1');
        if ((!in_array($status, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status', must be one of '0', '1'");
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets statusDescription
     * @return string
     */
    public function getStatusDescription()
    {
        return $this->container['statusDescription'];
    }

    /**
     * Sets statusDescription
     * @param string $statusDescription
     * @return $this
     */
    public function setStatusDescription($statusDescription)
    {
        $allowed_values = array('company found', 'company not found', 'invalid duns number');
        if ((!in_array($statusDescription, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'statusDescription', must be one of 'company found', 'company not found', 'invalid duns number'");
        }
        $this->container['statusDescription'] = $statusDescription;

        return $this;
    }

    /**
     * Gets dunsNumber
     * @return string
     */
    public function getDunsNumber()
    {
        return $this->container['dunsNumber'];
    }

    /**
     * Sets dunsNumber
     * @param string $dunsNumber
     * @return $this
     */
    public function setDunsNumber($dunsNumber)
    {
        $this->container['dunsNumber'] = $dunsNumber;

        return $this;
    }

    /**
     * Gets companyName
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['companyName'];
    }

    /**
     * Sets companyName
     * @param string $companyName
     * @return $this
     */
    public function setCompanyName($companyName)
    {
        $this->container['companyName'] = $companyName;

        return $this;
    }

    /**
     * Gets continentName
     * @return string
     */
    public function getContinentName()
    {
        return $this->container['continentName'];
    }

    /**
     * Sets continentName
     * @param string $continentName
     * @return $this
     */
    public function setContinentName($continentName)
    {
        $this->container['continentName'] = $continentName;

        return $this;
    }

    /**
     * Gets countryCode
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['countryCode'];
    }

    /**
     * Sets countryCode
     * @param string $countryCode
     * @return $this
     */
    public function setCountryCode($countryCode)
    {
        $this->container['countryCode'] = $countryCode;

        return $this;
    }

    /**
     * Gets countryCode3
     * @return string
     */
    public function getCountryCode3()
    {
        return $this->container['countryCode3'];
    }

    /**
     * Sets countryCode3
     * @param string $countryCode3
     * @return $this
     */
    public function setCountryCode3($countryCode3)
    {
        $this->container['countryCode3'] = $countryCode3;

        return $this;
    }

    /**
     * Gets countryName
     * @return string
     */
    public function getCountryName()
    {
        return $this->container['countryName'];
    }

    /**
     * Sets countryName
     * @param string $countryName
     * @return $this
     */
    public function setCountryName($countryName)
    {
        $this->container['countryName'] = $countryName;

        return $this;
    }

    /**
     * Gets zip
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     * @param string $zip
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets street
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     * @param string $street
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets houseNumber
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['houseNumber'];
    }

    /**
     * Sets houseNumber
     * @param string $houseNumber
     * @return $this
     */
    public function setHouseNumber($houseNumber)
    {
        $this->container['houseNumber'] = $houseNumber;

        return $this;
    }

    /**
     * Gets phoneNumber
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phoneNumber'];
    }

    /**
     * Sets phoneNumber
     * @param string $phoneNumber
     * @return $this
     */
    public function setPhoneNumber($phoneNumber)
    {
        $this->container['phoneNumber'] = $phoneNumber;

        return $this;
    }

    /**
     * Gets faxNumber
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['faxNumber'];
    }

    /**
     * Sets faxNumber
     * @param string $faxNumber
     * @return $this
     */
    public function setFaxNumber($faxNumber)
    {
        $this->container['faxNumber'] = $faxNumber;

        return $this;
    }

    /**
     * Gets stateName
     * @return string
     */
    public function getStateName()
    {
        return $this->container['stateName'];
    }

    /**
     * Sets stateName
     * @param string $stateName
     * @return $this
     */
    public function setStateName($stateName)
    {
        $this->container['stateName'] = $stateName;

        return $this;
    }

    /**
     * Gets ceoName
     * @return string
     */
    public function getCeoName()
    {
        return $this->container['ceoName'];
    }

    /**
     * Sets ceoName
     * @param string $ceoName
     * @return $this
     */
    public function setCeoName($ceoName)
    {
        $this->container['ceoName'] = $ceoName;

        return $this;
    }

    /**
     * Gets ceoTitle
     * @return string
     */
    public function getCeoTitle()
    {
        return $this->container['ceoTitle'];
    }

    /**
     * Sets ceoTitle
     * @param string $ceoTitle
     * @return $this
     */
    public function setCeoTitle($ceoTitle)
    {
        $this->container['ceoTitle'] = $ceoTitle;

        return $this;
    }

    /**
     * Gets sicCode
     * @return string
     */
    public function getSicCode()
    {
        return $this->container['sicCode'];
    }

    /**
     * Sets sicCode
     * @param string $sicCode
     * @return $this
     */
    public function setSicCode($sicCode)
    {
        $this->container['sicCode'] = $sicCode;

        return $this;
    }

    /**
     * Gets sicDescription
     * @return string
     */
    public function getSicDescription()
    {
        return $this->container['sicDescription'];
    }

    /**
     * Sets sicDescription
     * @param string $sicDescription
     * @return $this
     */
    public function setSicDescription($sicDescription)
    {
        $this->container['sicDescription'] = $sicDescription;

        return $this;
    }

    /**
     * Gets sicVersion
     * @return string
     */
    public function getSicVersion()
    {
        return $this->container['sicVersion'];
    }

    /**
     * Sets sicVersion
     * @param string $sicVersion
     * @return $this
     */
    public function setSicVersion($sicVersion)
    {
        $this->container['sicVersion'] = $sicVersion;

        return $this;
    }

    /**
     * Gets yearStarted
     * @return string
     */
    public function getYearStarted()
    {
        return $this->container['yearStarted'];
    }

    /**
     * Sets yearStarted
     * @param string $yearStarted
     * @return $this
     */
    public function setYearStarted($yearStarted)
    {
        $this->container['yearStarted'] = $yearStarted;

        return $this;
    }

    /**
     * Gets netWorth
     * @return int
     */
    public function getNetWorth()
    {
        return $this->container['netWorth'];
    }

    /**
     * Sets netWorth
     * @param int $netWorth
     * @return $this
     */
    public function setNetWorth($netWorth)
    {
        $this->container['netWorth'] = $netWorth;

        return $this;
    }

    /**
     * Gets currencyCode
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currencyCode'];
    }

    /**
     * Sets currencyCode
     * @param string $currencyCode
     * @return $this
     */
    public function setCurrencyCode($currencyCode)
    {
        $this->container['currencyCode'] = $currencyCode;

        return $this;
    }

    /**
     * Gets currencyName
     * @return string
     */
    public function getCurrencyName()
    {
        return $this->container['currencyName'];
    }

    /**
     * Sets currencyName
     * @param string $currencyName
     * @return $this
     */
    public function setCurrencyName($currencyName)
    {
        $this->container['currencyName'] = $currencyName;

        return $this;
    }

    /**
     * Gets totalEmployees
     * @return int
     */
    public function getTotalEmployees()
    {
        return $this->container['totalEmployees'];
    }

    /**
     * Sets totalEmployees
     * @param int $totalEmployees
     * @return $this
     */
    public function setTotalEmployees($totalEmployees)
    {
        $this->container['totalEmployees'] = $totalEmployees;

        return $this;
    }

    /**
     * Gets totalEmployeesIndicator
     * @return string
     */
    public function getTotalEmployeesIndicator()
    {
        return $this->container['totalEmployeesIndicator'];
    }

    /**
     * Sets totalEmployeesIndicator
     * @param string $totalEmployeesIndicator
     * @return $this
     */
    public function setTotalEmployeesIndicator($totalEmployeesIndicator)
    {
        $this->container['totalEmployeesIndicator'] = $totalEmployeesIndicator;

        return $this;
    }

    /**
     * Gets totalEmployeesIndicatorDescription
     * @return string
     */
    public function getTotalEmployeesIndicatorDescription()
    {
        return $this->container['totalEmployeesIndicatorDescription'];
    }

    /**
     * Sets totalEmployeesIndicatorDescription
     * @param string $totalEmployeesIndicatorDescription
     * @return $this
     */
    public function setTotalEmployeesIndicatorDescription($totalEmployeesIndicatorDescription)
    {
        $this->container['totalEmployeesIndicatorDescription'] = $totalEmployeesIndicatorDescription;

        return $this;
    }

    /**
     * Gets legalFormCode
     * @return int
     */
    public function getLegalFormCode()
    {
        return $this->container['legalFormCode'];
    }

    /**
     * Sets legalFormCode
     * @param int $legalFormCode
     * @return $this
     */
    public function setLegalFormCode($legalFormCode)
    {
        $this->container['legalFormCode'] = $legalFormCode;

        return $this;
    }

    /**
     * Gets legalFormDescription
     * @return string
     */
    public function getLegalFormDescription()
    {
        return $this->container['legalFormDescription'];
    }

    /**
     * Sets legalFormDescription
     * @param string $legalFormDescription
     * @return $this
     */
    public function setLegalFormDescription($legalFormDescription)
    {
        $this->container['legalFormDescription'] = $legalFormDescription;

        return $this;
    }

    /**
     * Gets reportDate
     * @return \DateTime
     */
    public function getReportDate()
    {
        return $this->container['reportDate'];
    }

    /**
     * Sets reportDate
     * @param \DateTime $reportDate
     * @return $this
     */
    public function setReportDate($reportDate)
    {
        $this->container['reportDate'] = $reportDate;

        return $this;
    }

    /**
     * Gets isOutOfBusiness
     * @return bool
     */
    public function getIsOutOfBusiness()
    {
        return $this->container['isOutOfBusiness'];
    }

    /**
     * Sets isOutOfBusiness
     * @param bool $isOutOfBusiness
     * @return $this
     */
    public function setIsOutOfBusiness($isOutOfBusiness)
    {
        $this->container['isOutOfBusiness'] = $isOutOfBusiness;

        return $this;
    }

    /**
     * Gets isBranch
     * @return bool
     */
    public function getIsBranch()
    {
        return $this->container['isBranch'];
    }

    /**
     * Sets isBranch
     * @param bool $isBranch
     * @return $this
     */
    public function setIsBranch($isBranch)
    {
        $this->container['isBranch'] = $isBranch;

        return $this;
    }

    /**
     * Gets businessRegistrationNumber
     * @return string
     */
    public function getBusinessRegistrationNumber()
    {
        return $this->container['businessRegistrationNumber'];
    }

    /**
     * Sets businessRegistrationNumber
     * @param string $businessRegistrationNumber
     * @return $this
     */
    public function setBusinessRegistrationNumber($businessRegistrationNumber)
    {
        $this->container['businessRegistrationNumber'] = $businessRegistrationNumber;

        return $this;
    }

    /**
     * Gets businessRegistrationType
     * @return string
     */
    public function getBusinessRegistrationType()
    {
        return $this->container['businessRegistrationType'];
    }

    /**
     * Sets businessRegistrationType
     * @param string $businessRegistrationType
     * @return $this
     */
    public function setBusinessRegistrationType($businessRegistrationType)
    {
        $this->container['businessRegistrationType'] = $businessRegistrationType;

        return $this;
    }

    /**
     * Gets incorporationYear
     * @return string
     */
    public function getIncorporationYear()
    {
        return $this->container['incorporationYear'];
    }

    /**
     * Sets incorporationYear
     * @param string $incorporationYear
     * @return $this
     */
    public function setIncorporationYear($incorporationYear)
    {
        $this->container['incorporationYear'] = $incorporationYear;

        return $this;
    }

    /**
     * Gets tradeStyles
     * @return string[]
     */
    public function getTradeStyles()
    {
        return $this->container['tradeStyles'];
    }

    /**
     * Sets tradeStyles
     * @param string[] $tradeStyles
     * @return $this
     */
    public function setTradeStyles($tradeStyles)
    {
        $this->container['tradeStyles'] = $tradeStyles;

        return $this;
    }

    /**
     * Gets enquiryDuns
     * @return string
     */
    public function getEnquiryDuns()
    {
        return $this->container['enquiryDuns'];
    }

    /**
     * Sets enquiryDuns
     * @param string $enquiryDuns
     * @return $this
     */
    public function setEnquiryDuns($enquiryDuns)
    {
        $this->container['enquiryDuns'] = $enquiryDuns;

        return $this;
    }

    /**
     * Gets sales
     * @return int
     */
    public function getSales()
    {
        return $this->container['sales'];
    }

    /**
     * Sets sales
     * @param int $sales
     * @return $this
     */
    public function setSales($sales)
    {
        $this->container['sales'] = $sales;

        return $this;
    }

    /**
     * Gets salesEstimatedDescription
     * @return string
     */
    public function getSalesEstimatedDescription()
    {
        return $this->container['salesEstimatedDescription'];
    }

    /**
     * Sets salesEstimatedDescription
     * @param string $salesEstimatedDescription
     * @return $this
     */
    public function setSalesEstimatedDescription($salesEstimatedDescription)
    {
        $this->container['salesEstimatedDescription'] = $salesEstimatedDescription;

        return $this;
    }

    /**
     * Gets paydexScore
     * @return int
     */
    public function getPaydexScore()
    {
        return $this->container['paydexScore'];
    }

    /**
     * Sets paydexScore
     * @param int $paydexScore
     * @return $this
     */
    public function setPaydexScore($paydexScore)
    {
        $this->container['paydexScore'] = $paydexScore;

        return $this;
    }

    /**
     * Gets paydexScoreDescription
     * @return string
     */
    public function getPaydexScoreDescription()
    {
        return $this->container['paydexScoreDescription'];
    }

    /**
     * Sets paydexScoreDescription
     * @param string $paydexScoreDescription
     * @return $this
     */
    public function setPaydexScoreDescription($paydexScoreDescription)
    {
        $this->container['paydexScoreDescription'] = $paydexScoreDescription;

        return $this;
    }

    /**
     * Gets paydexNorm
     * @return int
     */
    public function getPaydexNorm()
    {
        return $this->container['paydexNorm'];
    }

    /**
     * Sets paydexNorm
     * @param int $paydexNorm
     * @return $this
     */
    public function setPaydexNorm($paydexNorm)
    {
        $this->container['paydexNorm'] = $paydexNorm;

        return $this;
    }

    /**
     * Gets intangibleAssets
     * @return int
     */
    public function getIntangibleAssets()
    {
        return $this->container['intangibleAssets'];
    }

    /**
     * Sets intangibleAssets
     * @param int $intangibleAssets
     * @return $this
     */
    public function setIntangibleAssets($intangibleAssets)
    {
        $this->container['intangibleAssets'] = $intangibleAssets;

        return $this;
    }

    /**
     * Gets maxCreditRecommendation
     * @return int
     */
    public function getMaxCreditRecommendation()
    {
        return $this->container['maxCreditRecommendation'];
    }

    /**
     * Sets maxCreditRecommendation
     * @param int $maxCreditRecommendation
     * @return $this
     */
    public function setMaxCreditRecommendation($maxCreditRecommendation)
    {
        $this->container['maxCreditRecommendation'] = $maxCreditRecommendation;

        return $this;
    }

    /**
     * Gets dubRating
     * @return string
     */
    public function getDubRating()
    {
        return $this->container['dubRating'];
    }

    /**
     * Sets dubRating
     * @param string $dubRating
     * @return $this
     */
    public function setDubRating($dubRating)
    {
        $this->container['dubRating'] = $dubRating;

        return $this;
    }

    /**
     * Gets dubRatingFinancialStrength
     * @return string
     */
    public function getDubRatingFinancialStrength()
    {
        return $this->container['dubRatingFinancialStrength'];
    }

    /**
     * Sets dubRatingFinancialStrength
     * @param string $dubRatingFinancialStrength
     * @return $this
     */
    public function setDubRatingFinancialStrength($dubRatingFinancialStrength)
    {
        $this->container['dubRatingFinancialStrength'] = $dubRatingFinancialStrength;

        return $this;
    }

    /**
     * Gets dubRatingRisk
     * @return string
     */
    public function getDubRatingRisk()
    {
        return $this->container['dubRatingRisk'];
    }

    /**
     * Sets dubRatingRisk
     * @param string $dubRatingRisk
     * @return $this
     */
    public function setDubRatingRisk($dubRatingRisk)
    {
        $this->container['dubRatingRisk'] = $dubRatingRisk;

        return $this;
    }

    /**
     * Gets dubRatingRiskDescription
     * @return string
     */
    public function getDubRatingRiskDescription()
    {
        return $this->container['dubRatingRiskDescription'];
    }

    /**
     * Sets dubRatingRiskDescription
     * @param string $dubRatingRiskDescription
     * @return $this
     */
    public function setDubRatingRiskDescription($dubRatingRiskDescription)
    {
        $this->container['dubRatingRiskDescription'] = $dubRatingRiskDescription;

        return $this;
    }

    /**
     * Gets hasOpenClaims
     * @return bool
     */
    public function getHasOpenClaims()
    {
        return $this->container['hasOpenClaims'];
    }

    /**
     * Sets hasOpenClaims
     * @param bool $hasOpenClaims
     * @return $this
     */
    public function setHasOpenClaims($hasOpenClaims)
    {
        $this->container['hasOpenClaims'] = $hasOpenClaims;

        return $this;
    }

    /**
     * Gets hasCriminalProceedings
     * @return bool
     */
    public function getHasCriminalProceedings()
    {
        return $this->container['hasCriminalProceedings'];
    }

    /**
     * Sets hasCriminalProceedings
     * @param bool $hasCriminalProceedings
     * @return $this
     */
    public function setHasCriminalProceedings($hasCriminalProceedings)
    {
        $this->container['hasCriminalProceedings'] = $hasCriminalProceedings;

        return $this;
    }

    /**
     * Gets hasDisasterEvent
     * @return bool
     */
    public function getHasDisasterEvent()
    {
        return $this->container['hasDisasterEvent'];
    }

    /**
     * Sets hasDisasterEvent
     * @param bool $hasDisasterEvent
     * @return $this
     */
    public function setHasDisasterEvent($hasDisasterEvent)
    {
        $this->container['hasDisasterEvent'] = $hasDisasterEvent;

        return $this;
    }

    /**
     * Gets hasFinancialEmbarrassment
     * @return bool
     */
    public function getHasFinancialEmbarrassment()
    {
        return $this->container['hasFinancialEmbarrassment'];
    }

    /**
     * Sets hasFinancialEmbarrassment
     * @param bool $hasFinancialEmbarrassment
     * @return $this
     */
    public function setHasFinancialEmbarrassment($hasFinancialEmbarrassment)
    {
        $this->container['hasFinancialEmbarrassment'] = $hasFinancialEmbarrassment;

        return $this;
    }

    /**
     * Gets hasFinancialLegalEvent
     * @return bool
     */
    public function getHasFinancialLegalEvent()
    {
        return $this->container['hasFinancialLegalEvent'];
    }

    /**
     * Sets hasFinancialLegalEvent
     * @param bool $hasFinancialLegalEvent
     * @return $this
     */
    public function setHasFinancialLegalEvent($hasFinancialLegalEvent)
    {
        $this->container['hasFinancialLegalEvent'] = $hasFinancialLegalEvent;

        return $this;
    }

    /**
     * Gets hasSpecialEvent
     * @return bool
     */
    public function getHasSpecialEvent()
    {
        return $this->container['hasSpecialEvent'];
    }

    /**
     * Sets hasSpecialEvent
     * @param bool $hasSpecialEvent
     * @return $this
     */
    public function setHasSpecialEvent($hasSpecialEvent)
    {
        $this->container['hasSpecialEvent'] = $hasSpecialEvent;

        return $this;
    }

    /**
     * Gets hasOtherEvent
     * @return bool
     */
    public function getHasOtherEvent()
    {
        return $this->container['hasOtherEvent'];
    }

    /**
     * Sets hasOtherEvent
     * @param bool $hasOtherEvent
     * @return $this
     */
    public function setHasOtherEvent($hasOtherEvent)
    {
        $this->container['hasOtherEvent'] = $hasOtherEvent;

        return $this;
    }

    /**
     * Gets hasSecuredFilings
     * @return bool
     */
    public function getHasSecuredFilings()
    {
        return $this->container['hasSecuredFilings'];
    }

    /**
     * Sets hasSecuredFilings
     * @param bool $hasSecuredFilings
     * @return $this
     */
    public function setHasSecuredFilings($hasSecuredFilings)
    {
        $this->container['hasSecuredFilings'] = $hasSecuredFilings;

        return $this;
    }

    /**
     * Gets hasLawsuit
     * @return bool
     */
    public function getHasLawsuit()
    {
        return $this->container['hasLawsuit'];
    }

    /**
     * Sets hasLawsuit
     * @param bool $hasLawsuit
     * @return $this
     */
    public function setHasLawsuit($hasLawsuit)
    {
        $this->container['hasLawsuit'] = $hasLawsuit;

        return $this;
    }

    /**
     * Gets areEmployeesEstimated
     * @return bool
     */
    public function getAreEmployeesEstimated()
    {
        return $this->container['areEmployeesEstimated'];
    }

    /**
     * Sets areEmployeesEstimated
     * @param bool $areEmployeesEstimated
     * @return $this
     */
    public function setAreEmployeesEstimated($areEmployeesEstimated)
    {
        $this->container['areEmployeesEstimated'] = $areEmployeesEstimated;

        return $this;
    }

    /**
     * Gets areSalesEstimated
     * @return bool
     */
    public function getAreSalesEstimated()
    {
        return $this->container['areSalesEstimated'];
    }

    /**
     * Sets areSalesEstimated
     * @param bool $areSalesEstimated
     * @return $this
     */
    public function setAreSalesEstimated($areSalesEstimated)
    {
        $this->container['areSalesEstimated'] = $areSalesEstimated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this));
    }
}
