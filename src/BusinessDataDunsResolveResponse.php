<?php
/**
 * BusinessDataDunsResolveResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  DataMill
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * /data.mill for applications
 *
 * **&#47;data.mill for applications** is the most versatile and powerful API for all aspects of data quality in your business application.  Use **&#47;data.mill** to check, correct and enrich personal data and business information. The internationally applicable functions can be integrated easily into existing applications, whether desktop, online or mobile and thus enable you to professionally improve your customer or supplier database, directly in your system. Due to **&#47;data.mill**'s pay-per-use credit model there are no setup fees or fixed monthly subscription fees.  **&#47;data.mill** is constantly evolving and upgraded with the latest technology and data services available on the market.
 *
 * OpenAPI spec version: 1.6.4
 * Contact: info@datamill.solutions
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ;

use \ArrayAccess;

/**
 * BusinessDataDunsResolveResponse Class Doc Comment
 *
 * @category    Class */
 // @description Response of successful transformation request for /business-data/duns/resolve
/**
 * @package     DataMill
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BusinessDataDunsResolveResponse implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'BusinessDataDunsResolveResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'status' => 'string',
        'statusDescription' => 'string',
        'companyName' => 'string',
        'companyName2' => 'string',
        'continentName' => 'string',
        'countryCode' => 'string',
        'countryCode3' => 'string',
        'zip' => 'string',
        'city' => 'string',
        'street' => 'string',
        'houseNumber' => 'string',
        'phoneNumber' => 'string',
        'faxNumber' => 'string',
        'stateName' => 'string',
        'stateCode' => 'string',
        'ceoName' => 'string',
        'ceoTitle' => 'string',
        'ceoSecondary' => 'string[]',
        'sicCode' => 'string',
        'sicDescription' => 'string',
        'yearStarted' => 'string',
        'annualTurnoverLocalCurrency' => 'int',
        'annualTurnoverIndicatorCode' => 'string',
        'annualTurnoverIndicatorDescription' => 'string',
        'annualTurnoverUsd' => 'int',
        'netIncome' => 'int',
        'netIncomeUsd' => 'int',
        'netWorth' => 'int',
        'netWorthUsd' => 'int',
        'currencyCode' => 'string',
        'currencyName' => 'string',
        'marketabilityCode' => 'string',
        'marketabilityDescription' => 'string',
        'totalEmployees' => 'int',
        'totalEmployeesIndicator' => 'string',
        'totalEmployeesIndicatorDescription' => 'string',
        'totalEmployeesPhysicalAddress' => 'int',
        'totalEmployeesPhysicalAddressIndicator' => 'string',
        'importExportIndicator' => 'string',
        'importExportIndicatorDescription' => 'string',
        'legalFormCode' => 'int',
        'legalFormDescription' => 'string',
        'businessStructureCode' => 'string',
        'businessStructureDescription' => 'string',
        'businessRegistrationNumberCode' => 'string',
        'businessRegistrationNumberCodeDescription' => 'string',
        'undeliverableIndicator' => 'string',
        'undeliverableDescription' => 'string',
        'financialStatementDate' => '\DateTime',
        'reportDate' => '\DateTime',
        'isOnlyAvailableAddress' => 'bool',
        'isSubsidiary' => 'bool',
        'totalEmployeesIncludingPrincipalsIndicator' => 'bool',
        'isOutOfBusiness' => 'bool'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'status' => 'status',
        'statusDescription' => 'status_description',
        'companyName' => 'company_name',
        'companyName2' => 'company_name_2',
        'continentName' => 'continent_name',
        'countryCode' => 'country_code',
        'countryCode3' => 'country_code_3',
        'zip' => 'zip',
        'city' => 'city',
        'street' => 'street',
        'houseNumber' => 'house_number',
        'phoneNumber' => 'phone_number',
        'faxNumber' => 'fax_number',
        'stateName' => 'state_name',
        'stateCode' => 'state_code',
        'ceoName' => 'ceo_name',
        'ceoTitle' => 'ceo_title',
        'ceoSecondary' => 'ceo_secondary',
        'sicCode' => 'sic_code',
        'sicDescription' => 'sic_description',
        'yearStarted' => 'year_started',
        'annualTurnoverLocalCurrency' => 'annual_turnover_local_currency',
        'annualTurnoverIndicatorCode' => 'annual_turnover_indicator_code',
        'annualTurnoverIndicatorDescription' => 'annual_turnover_indicator_description',
        'annualTurnoverUsd' => 'annual_turnover_usd',
        'netIncome' => 'net_income',
        'netIncomeUsd' => 'net_income_usd',
        'netWorth' => 'net_worth',
        'netWorthUsd' => 'net_worth_usd',
        'currencyCode' => 'currency_code',
        'currencyName' => 'currency_name',
        'marketabilityCode' => 'marketability_code',
        'marketabilityDescription' => 'marketability_description',
        'totalEmployees' => 'total_employees',
        'totalEmployeesIndicator' => 'total_employees_indicator',
        'totalEmployeesIndicatorDescription' => 'total_employees_indicator_description',
        'totalEmployeesPhysicalAddress' => 'total_employees_physical_address',
        'totalEmployeesPhysicalAddressIndicator' => 'total_employees_physical_address_indicator',
        'importExportIndicator' => 'import_export_indicator',
        'importExportIndicatorDescription' => 'import_export_indicator_description',
        'legalFormCode' => 'legal_form_code',
        'legalFormDescription' => 'legal_form_description',
        'businessStructureCode' => 'business_structure_code',
        'businessStructureDescription' => 'business_structure_description',
        'businessRegistrationNumberCode' => 'business_registration_number_code',
        'businessRegistrationNumberCodeDescription' => 'business_registration_number_code_description',
        'undeliverableIndicator' => 'undeliverable_indicator',
        'undeliverableDescription' => 'undeliverable_description',
        'financialStatementDate' => 'financial_statement_date',
        'reportDate' => 'report_date',
        'isOnlyAvailableAddress' => 'is_only_available_address',
        'isSubsidiary' => 'is_subsidiary',
        'totalEmployeesIncludingPrincipalsIndicator' => 'total_employees_including_principals_indicator',
        'isOutOfBusiness' => 'is_out_of_business'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'status' => 'setStatus',
        'statusDescription' => 'setStatusDescription',
        'companyName' => 'setCompanyName',
        'companyName2' => 'setCompanyName2',
        'continentName' => 'setContinentName',
        'countryCode' => 'setCountryCode',
        'countryCode3' => 'setCountryCode3',
        'zip' => 'setZip',
        'city' => 'setCity',
        'street' => 'setStreet',
        'houseNumber' => 'setHouseNumber',
        'phoneNumber' => 'setPhoneNumber',
        'faxNumber' => 'setFaxNumber',
        'stateName' => 'setStateName',
        'stateCode' => 'setStateCode',
        'ceoName' => 'setCeoName',
        'ceoTitle' => 'setCeoTitle',
        'ceoSecondary' => 'setCeoSecondary',
        'sicCode' => 'setSicCode',
        'sicDescription' => 'setSicDescription',
        'yearStarted' => 'setYearStarted',
        'annualTurnoverLocalCurrency' => 'setAnnualTurnoverLocalCurrency',
        'annualTurnoverIndicatorCode' => 'setAnnualTurnoverIndicatorCode',
        'annualTurnoverIndicatorDescription' => 'setAnnualTurnoverIndicatorDescription',
        'annualTurnoverUsd' => 'setAnnualTurnoverUsd',
        'netIncome' => 'setNetIncome',
        'netIncomeUsd' => 'setNetIncomeUsd',
        'netWorth' => 'setNetWorth',
        'netWorthUsd' => 'setNetWorthUsd',
        'currencyCode' => 'setCurrencyCode',
        'currencyName' => 'setCurrencyName',
        'marketabilityCode' => 'setMarketabilityCode',
        'marketabilityDescription' => 'setMarketabilityDescription',
        'totalEmployees' => 'setTotalEmployees',
        'totalEmployeesIndicator' => 'setTotalEmployeesIndicator',
        'totalEmployeesIndicatorDescription' => 'setTotalEmployeesIndicatorDescription',
        'totalEmployeesPhysicalAddress' => 'setTotalEmployeesPhysicalAddress',
        'totalEmployeesPhysicalAddressIndicator' => 'setTotalEmployeesPhysicalAddressIndicator',
        'importExportIndicator' => 'setImportExportIndicator',
        'importExportIndicatorDescription' => 'setImportExportIndicatorDescription',
        'legalFormCode' => 'setLegalFormCode',
        'legalFormDescription' => 'setLegalFormDescription',
        'businessStructureCode' => 'setBusinessStructureCode',
        'businessStructureDescription' => 'setBusinessStructureDescription',
        'businessRegistrationNumberCode' => 'setBusinessRegistrationNumberCode',
        'businessRegistrationNumberCodeDescription' => 'setBusinessRegistrationNumberCodeDescription',
        'undeliverableIndicator' => 'setUndeliverableIndicator',
        'undeliverableDescription' => 'setUndeliverableDescription',
        'financialStatementDate' => 'setFinancialStatementDate',
        'reportDate' => 'setReportDate',
        'isOnlyAvailableAddress' => 'setIsOnlyAvailableAddress',
        'isSubsidiary' => 'setIsSubsidiary',
        'totalEmployeesIncludingPrincipalsIndicator' => 'setTotalEmployeesIncludingPrincipalsIndicator',
        'isOutOfBusiness' => 'setIsOutOfBusiness'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'status' => 'getStatus',
        'statusDescription' => 'getStatusDescription',
        'companyName' => 'getCompanyName',
        'companyName2' => 'getCompanyName2',
        'continentName' => 'getContinentName',
        'countryCode' => 'getCountryCode',
        'countryCode3' => 'getCountryCode3',
        'zip' => 'getZip',
        'city' => 'getCity',
        'street' => 'getStreet',
        'houseNumber' => 'getHouseNumber',
        'phoneNumber' => 'getPhoneNumber',
        'faxNumber' => 'getFaxNumber',
        'stateName' => 'getStateName',
        'stateCode' => 'getStateCode',
        'ceoName' => 'getCeoName',
        'ceoTitle' => 'getCeoTitle',
        'ceoSecondary' => 'getCeoSecondary',
        'sicCode' => 'getSicCode',
        'sicDescription' => 'getSicDescription',
        'yearStarted' => 'getYearStarted',
        'annualTurnoverLocalCurrency' => 'getAnnualTurnoverLocalCurrency',
        'annualTurnoverIndicatorCode' => 'getAnnualTurnoverIndicatorCode',
        'annualTurnoverIndicatorDescription' => 'getAnnualTurnoverIndicatorDescription',
        'annualTurnoverUsd' => 'getAnnualTurnoverUsd',
        'netIncome' => 'getNetIncome',
        'netIncomeUsd' => 'getNetIncomeUsd',
        'netWorth' => 'getNetWorth',
        'netWorthUsd' => 'getNetWorthUsd',
        'currencyCode' => 'getCurrencyCode',
        'currencyName' => 'getCurrencyName',
        'marketabilityCode' => 'getMarketabilityCode',
        'marketabilityDescription' => 'getMarketabilityDescription',
        'totalEmployees' => 'getTotalEmployees',
        'totalEmployeesIndicator' => 'getTotalEmployeesIndicator',
        'totalEmployeesIndicatorDescription' => 'getTotalEmployeesIndicatorDescription',
        'totalEmployeesPhysicalAddress' => 'getTotalEmployeesPhysicalAddress',
        'totalEmployeesPhysicalAddressIndicator' => 'getTotalEmployeesPhysicalAddressIndicator',
        'importExportIndicator' => 'getImportExportIndicator',
        'importExportIndicatorDescription' => 'getImportExportIndicatorDescription',
        'legalFormCode' => 'getLegalFormCode',
        'legalFormDescription' => 'getLegalFormDescription',
        'businessStructureCode' => 'getBusinessStructureCode',
        'businessStructureDescription' => 'getBusinessStructureDescription',
        'businessRegistrationNumberCode' => 'getBusinessRegistrationNumberCode',
        'businessRegistrationNumberCodeDescription' => 'getBusinessRegistrationNumberCodeDescription',
        'undeliverableIndicator' => 'getUndeliverableIndicator',
        'undeliverableDescription' => 'getUndeliverableDescription',
        'financialStatementDate' => 'getFinancialStatementDate',
        'reportDate' => 'getReportDate',
        'isOnlyAvailableAddress' => 'getIsOnlyAvailableAddress',
        'isSubsidiary' => 'getIsSubsidiary',
        'totalEmployeesIncludingPrincipalsIndicator' => 'getTotalEmployeesIncludingPrincipalsIndicator',
        'isOutOfBusiness' => 'getIsOutOfBusiness'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const STATUS__0 = '0';
    const STATUS__1 = '1';
    const STATUS_DESCRIPTION_COMPANY_FOUND = 'company found';
    const STATUS_DESCRIPTION_COMPANY_NOT_FOUND = 'company not found';
    const STATUS_DESCRIPTION_INVALID_DUNS_NUMBER = 'invalid duns number';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS__0,
            self::STATUS__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getStatusDescriptionAllowableValues()
    {
        return [
            self::STATUS_DESCRIPTION_COMPANY_FOUND,
            self::STATUS_DESCRIPTION_COMPANY_NOT_FOUND,
            self::STATUS_DESCRIPTION_INVALID_DUNS_NUMBER,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['statusDescription'] = isset($data['statusDescription']) ? $data['statusDescription'] : null;
        $this->container['companyName'] = isset($data['companyName']) ? $data['companyName'] : null;
        $this->container['companyName2'] = isset($data['companyName2']) ? $data['companyName2'] : null;
        $this->container['continentName'] = isset($data['continentName']) ? $data['continentName'] : null;
        $this->container['countryCode'] = isset($data['countryCode']) ? $data['countryCode'] : null;
        $this->container['countryCode3'] = isset($data['countryCode3']) ? $data['countryCode3'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['houseNumber'] = isset($data['houseNumber']) ? $data['houseNumber'] : null;
        $this->container['phoneNumber'] = isset($data['phoneNumber']) ? $data['phoneNumber'] : null;
        $this->container['faxNumber'] = isset($data['faxNumber']) ? $data['faxNumber'] : null;
        $this->container['stateName'] = isset($data['stateName']) ? $data['stateName'] : null;
        $this->container['stateCode'] = isset($data['stateCode']) ? $data['stateCode'] : null;
        $this->container['ceoName'] = isset($data['ceoName']) ? $data['ceoName'] : null;
        $this->container['ceoTitle'] = isset($data['ceoTitle']) ? $data['ceoTitle'] : null;
        $this->container['ceoSecondary'] = isset($data['ceoSecondary']) ? $data['ceoSecondary'] : null;
        $this->container['sicCode'] = isset($data['sicCode']) ? $data['sicCode'] : null;
        $this->container['sicDescription'] = isset($data['sicDescription']) ? $data['sicDescription'] : null;
        $this->container['yearStarted'] = isset($data['yearStarted']) ? $data['yearStarted'] : null;
        $this->container['annualTurnoverLocalCurrency'] = isset($data['annualTurnoverLocalCurrency']) ? $data['annualTurnoverLocalCurrency'] : null;
        $this->container['annualTurnoverIndicatorCode'] = isset($data['annualTurnoverIndicatorCode']) ? $data['annualTurnoverIndicatorCode'] : null;
        $this->container['annualTurnoverIndicatorDescription'] = isset($data['annualTurnoverIndicatorDescription']) ? $data['annualTurnoverIndicatorDescription'] : null;
        $this->container['annualTurnoverUsd'] = isset($data['annualTurnoverUsd']) ? $data['annualTurnoverUsd'] : null;
        $this->container['netIncome'] = isset($data['netIncome']) ? $data['netIncome'] : null;
        $this->container['netIncomeUsd'] = isset($data['netIncomeUsd']) ? $data['netIncomeUsd'] : null;
        $this->container['netWorth'] = isset($data['netWorth']) ? $data['netWorth'] : null;
        $this->container['netWorthUsd'] = isset($data['netWorthUsd']) ? $data['netWorthUsd'] : null;
        $this->container['currencyCode'] = isset($data['currencyCode']) ? $data['currencyCode'] : null;
        $this->container['currencyName'] = isset($data['currencyName']) ? $data['currencyName'] : null;
        $this->container['marketabilityCode'] = isset($data['marketabilityCode']) ? $data['marketabilityCode'] : null;
        $this->container['marketabilityDescription'] = isset($data['marketabilityDescription']) ? $data['marketabilityDescription'] : null;
        $this->container['totalEmployees'] = isset($data['totalEmployees']) ? $data['totalEmployees'] : null;
        $this->container['totalEmployeesIndicator'] = isset($data['totalEmployeesIndicator']) ? $data['totalEmployeesIndicator'] : null;
        $this->container['totalEmployeesIndicatorDescription'] = isset($data['totalEmployeesIndicatorDescription']) ? $data['totalEmployeesIndicatorDescription'] : null;
        $this->container['totalEmployeesPhysicalAddress'] = isset($data['totalEmployeesPhysicalAddress']) ? $data['totalEmployeesPhysicalAddress'] : null;
        $this->container['totalEmployeesPhysicalAddressIndicator'] = isset($data['totalEmployeesPhysicalAddressIndicator']) ? $data['totalEmployeesPhysicalAddressIndicator'] : null;
        $this->container['importExportIndicator'] = isset($data['importExportIndicator']) ? $data['importExportIndicator'] : null;
        $this->container['importExportIndicatorDescription'] = isset($data['importExportIndicatorDescription']) ? $data['importExportIndicatorDescription'] : null;
        $this->container['legalFormCode'] = isset($data['legalFormCode']) ? $data['legalFormCode'] : null;
        $this->container['legalFormDescription'] = isset($data['legalFormDescription']) ? $data['legalFormDescription'] : null;
        $this->container['businessStructureCode'] = isset($data['businessStructureCode']) ? $data['businessStructureCode'] : null;
        $this->container['businessStructureDescription'] = isset($data['businessStructureDescription']) ? $data['businessStructureDescription'] : null;
        $this->container['businessRegistrationNumberCode'] = isset($data['businessRegistrationNumberCode']) ? $data['businessRegistrationNumberCode'] : null;
        $this->container['businessRegistrationNumberCodeDescription'] = isset($data['businessRegistrationNumberCodeDescription']) ? $data['businessRegistrationNumberCodeDescription'] : null;
        $this->container['undeliverableIndicator'] = isset($data['undeliverableIndicator']) ? $data['undeliverableIndicator'] : null;
        $this->container['undeliverableDescription'] = isset($data['undeliverableDescription']) ? $data['undeliverableDescription'] : null;
        $this->container['financialStatementDate'] = isset($data['financialStatementDate']) ? $data['financialStatementDate'] : null;
        $this->container['reportDate'] = isset($data['reportDate']) ? $data['reportDate'] : null;
        $this->container['isOnlyAvailableAddress'] = isset($data['isOnlyAvailableAddress']) ? $data['isOnlyAvailableAddress'] : null;
        $this->container['isSubsidiary'] = isset($data['isSubsidiary']) ? $data['isSubsidiary'] : null;
        $this->container['totalEmployeesIncludingPrincipalsIndicator'] = isset($data['totalEmployeesIncludingPrincipalsIndicator']) ? $data['totalEmployeesIncludingPrincipalsIndicator'] : null;
        $this->container['isOutOfBusiness'] = isset($data['isOutOfBusiness']) ? $data['isOutOfBusiness'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['status'] === null) {
            $invalid_properties[] = "'status' can't be null";
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'status', must be one of '0', '1'.";
        }

        if ($this->container['statusDescription'] === null) {
            $invalid_properties[] = "'statusDescription' can't be null";
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['statusDescription'], $allowed_values)) {
            $invalid_properties[] = "invalid value for 'statusDescription', must be one of 'company found', 'company not found', 'invalid duns number'.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['status'] === null) {
            return false;
        }
        $allowed_values = ["0", "1"];
        if (!in_array($this->container['status'], $allowed_values)) {
            return false;
        }
        if ($this->container['statusDescription'] === null) {
            return false;
        }
        $allowed_values = ["company found", "company not found", "invalid duns number"];
        if (!in_array($this->container['statusDescription'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status
     * @return $this
     */
    public function setStatus($status)
    {
        $allowed_values = array('0', '1');
        if ((!in_array($status, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'status', must be one of '0', '1'");
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets statusDescription
     * @return string
     */
    public function getStatusDescription()
    {
        return $this->container['statusDescription'];
    }

    /**
     * Sets statusDescription
     * @param string $statusDescription
     * @return $this
     */
    public function setStatusDescription($statusDescription)
    {
        $allowed_values = array('company found', 'company not found', 'invalid duns number');
        if ((!in_array($statusDescription, $allowed_values))) {
            throw new \InvalidArgumentException("Invalid value for 'statusDescription', must be one of 'company found', 'company not found', 'invalid duns number'");
        }
        $this->container['statusDescription'] = $statusDescription;

        return $this;
    }

    /**
     * Gets companyName
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['companyName'];
    }

    /**
     * Sets companyName
     * @param string $companyName
     * @return $this
     */
    public function setCompanyName($companyName)
    {
        $this->container['companyName'] = $companyName;

        return $this;
    }

    /**
     * Gets companyName2
     * @return string
     */
    public function getCompanyName2()
    {
        return $this->container['companyName2'];
    }

    /**
     * Sets companyName2
     * @param string $companyName2
     * @return $this
     */
    public function setCompanyName2($companyName2)
    {
        $this->container['companyName2'] = $companyName2;

        return $this;
    }

    /**
     * Gets continentName
     * @return string
     */
    public function getContinentName()
    {
        return $this->container['continentName'];
    }

    /**
     * Sets continentName
     * @param string $continentName
     * @return $this
     */
    public function setContinentName($continentName)
    {
        $this->container['continentName'] = $continentName;

        return $this;
    }

    /**
     * Gets countryCode
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['countryCode'];
    }

    /**
     * Sets countryCode
     * @param string $countryCode
     * @return $this
     */
    public function setCountryCode($countryCode)
    {
        $this->container['countryCode'] = $countryCode;

        return $this;
    }

    /**
     * Gets countryCode3
     * @return string
     */
    public function getCountryCode3()
    {
        return $this->container['countryCode3'];
    }

    /**
     * Sets countryCode3
     * @param string $countryCode3
     * @return $this
     */
    public function setCountryCode3($countryCode3)
    {
        $this->container['countryCode3'] = $countryCode3;

        return $this;
    }

    /**
     * Gets zip
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     * @param string $zip
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets street
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     * @param string $street
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets houseNumber
     * @return string
     */
    public function getHouseNumber()
    {
        return $this->container['houseNumber'];
    }

    /**
     * Sets houseNumber
     * @param string $houseNumber
     * @return $this
     */
    public function setHouseNumber($houseNumber)
    {
        $this->container['houseNumber'] = $houseNumber;

        return $this;
    }

    /**
     * Gets phoneNumber
     * @return string
     */
    public function getPhoneNumber()
    {
        return $this->container['phoneNumber'];
    }

    /**
     * Sets phoneNumber
     * @param string $phoneNumber
     * @return $this
     */
    public function setPhoneNumber($phoneNumber)
    {
        $this->container['phoneNumber'] = $phoneNumber;

        return $this;
    }

    /**
     * Gets faxNumber
     * @return string
     */
    public function getFaxNumber()
    {
        return $this->container['faxNumber'];
    }

    /**
     * Sets faxNumber
     * @param string $faxNumber
     * @return $this
     */
    public function setFaxNumber($faxNumber)
    {
        $this->container['faxNumber'] = $faxNumber;

        return $this;
    }

    /**
     * Gets stateName
     * @return string
     */
    public function getStateName()
    {
        return $this->container['stateName'];
    }

    /**
     * Sets stateName
     * @param string $stateName
     * @return $this
     */
    public function setStateName($stateName)
    {
        $this->container['stateName'] = $stateName;

        return $this;
    }

    /**
     * Gets stateCode
     * @return string
     */
    public function getStateCode()
    {
        return $this->container['stateCode'];
    }

    /**
     * Sets stateCode
     * @param string $stateCode
     * @return $this
     */
    public function setStateCode($stateCode)
    {
        $this->container['stateCode'] = $stateCode;

        return $this;
    }

    /**
     * Gets ceoName
     * @return string
     */
    public function getCeoName()
    {
        return $this->container['ceoName'];
    }

    /**
     * Sets ceoName
     * @param string $ceoName
     * @return $this
     */
    public function setCeoName($ceoName)
    {
        $this->container['ceoName'] = $ceoName;

        return $this;
    }

    /**
     * Gets ceoTitle
     * @return string
     */
    public function getCeoTitle()
    {
        return $this->container['ceoTitle'];
    }

    /**
     * Sets ceoTitle
     * @param string $ceoTitle
     * @return $this
     */
    public function setCeoTitle($ceoTitle)
    {
        $this->container['ceoTitle'] = $ceoTitle;

        return $this;
    }

    /**
     * Gets ceoSecondary
     * @return string[]
     */
    public function getCeoSecondary()
    {
        return $this->container['ceoSecondary'];
    }

    /**
     * Sets ceoSecondary
     * @param string[] $ceoSecondary
     * @return $this
     */
    public function setCeoSecondary($ceoSecondary)
    {
        $this->container['ceoSecondary'] = $ceoSecondary;

        return $this;
    }

    /**
     * Gets sicCode
     * @return string
     */
    public function getSicCode()
    {
        return $this->container['sicCode'];
    }

    /**
     * Sets sicCode
     * @param string $sicCode
     * @return $this
     */
    public function setSicCode($sicCode)
    {
        $this->container['sicCode'] = $sicCode;

        return $this;
    }

    /**
     * Gets sicDescription
     * @return string
     */
    public function getSicDescription()
    {
        return $this->container['sicDescription'];
    }

    /**
     * Sets sicDescription
     * @param string $sicDescription
     * @return $this
     */
    public function setSicDescription($sicDescription)
    {
        $this->container['sicDescription'] = $sicDescription;

        return $this;
    }

    /**
     * Gets yearStarted
     * @return string
     */
    public function getYearStarted()
    {
        return $this->container['yearStarted'];
    }

    /**
     * Sets yearStarted
     * @param string $yearStarted
     * @return $this
     */
    public function setYearStarted($yearStarted)
    {
        $this->container['yearStarted'] = $yearStarted;

        return $this;
    }

    /**
     * Gets annualTurnoverLocalCurrency
     * @return int
     */
    public function getAnnualTurnoverLocalCurrency()
    {
        return $this->container['annualTurnoverLocalCurrency'];
    }

    /**
     * Sets annualTurnoverLocalCurrency
     * @param int $annualTurnoverLocalCurrency
     * @return $this
     */
    public function setAnnualTurnoverLocalCurrency($annualTurnoverLocalCurrency)
    {
        $this->container['annualTurnoverLocalCurrency'] = $annualTurnoverLocalCurrency;

        return $this;
    }

    /**
     * Gets annualTurnoverIndicatorCode
     * @return string
     */
    public function getAnnualTurnoverIndicatorCode()
    {
        return $this->container['annualTurnoverIndicatorCode'];
    }

    /**
     * Sets annualTurnoverIndicatorCode
     * @param string $annualTurnoverIndicatorCode
     * @return $this
     */
    public function setAnnualTurnoverIndicatorCode($annualTurnoverIndicatorCode)
    {
        $this->container['annualTurnoverIndicatorCode'] = $annualTurnoverIndicatorCode;

        return $this;
    }

    /**
     * Gets annualTurnoverIndicatorDescription
     * @return string
     */
    public function getAnnualTurnoverIndicatorDescription()
    {
        return $this->container['annualTurnoverIndicatorDescription'];
    }

    /**
     * Sets annualTurnoverIndicatorDescription
     * @param string $annualTurnoverIndicatorDescription
     * @return $this
     */
    public function setAnnualTurnoverIndicatorDescription($annualTurnoverIndicatorDescription)
    {
        $this->container['annualTurnoverIndicatorDescription'] = $annualTurnoverIndicatorDescription;

        return $this;
    }

    /**
     * Gets annualTurnoverUsd
     * @return int
     */
    public function getAnnualTurnoverUsd()
    {
        return $this->container['annualTurnoverUsd'];
    }

    /**
     * Sets annualTurnoverUsd
     * @param int $annualTurnoverUsd
     * @return $this
     */
    public function setAnnualTurnoverUsd($annualTurnoverUsd)
    {
        $this->container['annualTurnoverUsd'] = $annualTurnoverUsd;

        return $this;
    }

    /**
     * Gets netIncome
     * @return int
     */
    public function getNetIncome()
    {
        return $this->container['netIncome'];
    }

    /**
     * Sets netIncome
     * @param int $netIncome
     * @return $this
     */
    public function setNetIncome($netIncome)
    {
        $this->container['netIncome'] = $netIncome;

        return $this;
    }

    /**
     * Gets netIncomeUsd
     * @return int
     */
    public function getNetIncomeUsd()
    {
        return $this->container['netIncomeUsd'];
    }

    /**
     * Sets netIncomeUsd
     * @param int $netIncomeUsd
     * @return $this
     */
    public function setNetIncomeUsd($netIncomeUsd)
    {
        $this->container['netIncomeUsd'] = $netIncomeUsd;

        return $this;
    }

    /**
     * Gets netWorth
     * @return int
     */
    public function getNetWorth()
    {
        return $this->container['netWorth'];
    }

    /**
     * Sets netWorth
     * @param int $netWorth
     * @return $this
     */
    public function setNetWorth($netWorth)
    {
        $this->container['netWorth'] = $netWorth;

        return $this;
    }

    /**
     * Gets netWorthUsd
     * @return int
     */
    public function getNetWorthUsd()
    {
        return $this->container['netWorthUsd'];
    }

    /**
     * Sets netWorthUsd
     * @param int $netWorthUsd
     * @return $this
     */
    public function setNetWorthUsd($netWorthUsd)
    {
        $this->container['netWorthUsd'] = $netWorthUsd;

        return $this;
    }

    /**
     * Gets currencyCode
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currencyCode'];
    }

    /**
     * Sets currencyCode
     * @param string $currencyCode
     * @return $this
     */
    public function setCurrencyCode($currencyCode)
    {
        $this->container['currencyCode'] = $currencyCode;

        return $this;
    }

    /**
     * Gets currencyName
     * @return string
     */
    public function getCurrencyName()
    {
        return $this->container['currencyName'];
    }

    /**
     * Sets currencyName
     * @param string $currencyName
     * @return $this
     */
    public function setCurrencyName($currencyName)
    {
        $this->container['currencyName'] = $currencyName;

        return $this;
    }

    /**
     * Gets marketabilityCode
     * @return string
     */
    public function getMarketabilityCode()
    {
        return $this->container['marketabilityCode'];
    }

    /**
     * Sets marketabilityCode
     * @param string $marketabilityCode
     * @return $this
     */
    public function setMarketabilityCode($marketabilityCode)
    {
        $this->container['marketabilityCode'] = $marketabilityCode;

        return $this;
    }

    /**
     * Gets marketabilityDescription
     * @return string
     */
    public function getMarketabilityDescription()
    {
        return $this->container['marketabilityDescription'];
    }

    /**
     * Sets marketabilityDescription
     * @param string $marketabilityDescription
     * @return $this
     */
    public function setMarketabilityDescription($marketabilityDescription)
    {
        $this->container['marketabilityDescription'] = $marketabilityDescription;

        return $this;
    }

    /**
     * Gets totalEmployees
     * @return int
     */
    public function getTotalEmployees()
    {
        return $this->container['totalEmployees'];
    }

    /**
     * Sets totalEmployees
     * @param int $totalEmployees
     * @return $this
     */
    public function setTotalEmployees($totalEmployees)
    {
        $this->container['totalEmployees'] = $totalEmployees;

        return $this;
    }

    /**
     * Gets totalEmployeesIndicator
     * @return string
     */
    public function getTotalEmployeesIndicator()
    {
        return $this->container['totalEmployeesIndicator'];
    }

    /**
     * Sets totalEmployeesIndicator
     * @param string $totalEmployeesIndicator
     * @return $this
     */
    public function setTotalEmployeesIndicator($totalEmployeesIndicator)
    {
        $this->container['totalEmployeesIndicator'] = $totalEmployeesIndicator;

        return $this;
    }

    /**
     * Gets totalEmployeesIndicatorDescription
     * @return string
     */
    public function getTotalEmployeesIndicatorDescription()
    {
        return $this->container['totalEmployeesIndicatorDescription'];
    }

    /**
     * Sets totalEmployeesIndicatorDescription
     * @param string $totalEmployeesIndicatorDescription
     * @return $this
     */
    public function setTotalEmployeesIndicatorDescription($totalEmployeesIndicatorDescription)
    {
        $this->container['totalEmployeesIndicatorDescription'] = $totalEmployeesIndicatorDescription;

        return $this;
    }

    /**
     * Gets totalEmployeesPhysicalAddress
     * @return int
     */
    public function getTotalEmployeesPhysicalAddress()
    {
        return $this->container['totalEmployeesPhysicalAddress'];
    }

    /**
     * Sets totalEmployeesPhysicalAddress
     * @param int $totalEmployeesPhysicalAddress
     * @return $this
     */
    public function setTotalEmployeesPhysicalAddress($totalEmployeesPhysicalAddress)
    {
        $this->container['totalEmployeesPhysicalAddress'] = $totalEmployeesPhysicalAddress;

        return $this;
    }

    /**
     * Gets totalEmployeesPhysicalAddressIndicator
     * @return string
     */
    public function getTotalEmployeesPhysicalAddressIndicator()
    {
        return $this->container['totalEmployeesPhysicalAddressIndicator'];
    }

    /**
     * Sets totalEmployeesPhysicalAddressIndicator
     * @param string $totalEmployeesPhysicalAddressIndicator
     * @return $this
     */
    public function setTotalEmployeesPhysicalAddressIndicator($totalEmployeesPhysicalAddressIndicator)
    {
        $this->container['totalEmployeesPhysicalAddressIndicator'] = $totalEmployeesPhysicalAddressIndicator;

        return $this;
    }

    /**
     * Gets importExportIndicator
     * @return string
     */
    public function getImportExportIndicator()
    {
        return $this->container['importExportIndicator'];
    }

    /**
     * Sets importExportIndicator
     * @param string $importExportIndicator
     * @return $this
     */
    public function setImportExportIndicator($importExportIndicator)
    {
        $this->container['importExportIndicator'] = $importExportIndicator;

        return $this;
    }

    /**
     * Gets importExportIndicatorDescription
     * @return string
     */
    public function getImportExportIndicatorDescription()
    {
        return $this->container['importExportIndicatorDescription'];
    }

    /**
     * Sets importExportIndicatorDescription
     * @param string $importExportIndicatorDescription
     * @return $this
     */
    public function setImportExportIndicatorDescription($importExportIndicatorDescription)
    {
        $this->container['importExportIndicatorDescription'] = $importExportIndicatorDescription;

        return $this;
    }

    /**
     * Gets legalFormCode
     * @return int
     */
    public function getLegalFormCode()
    {
        return $this->container['legalFormCode'];
    }

    /**
     * Sets legalFormCode
     * @param int $legalFormCode
     * @return $this
     */
    public function setLegalFormCode($legalFormCode)
    {
        $this->container['legalFormCode'] = $legalFormCode;

        return $this;
    }

    /**
     * Gets legalFormDescription
     * @return string
     */
    public function getLegalFormDescription()
    {
        return $this->container['legalFormDescription'];
    }

    /**
     * Sets legalFormDescription
     * @param string $legalFormDescription
     * @return $this
     */
    public function setLegalFormDescription($legalFormDescription)
    {
        $this->container['legalFormDescription'] = $legalFormDescription;

        return $this;
    }

    /**
     * Gets businessStructureCode
     * @return string
     */
    public function getBusinessStructureCode()
    {
        return $this->container['businessStructureCode'];
    }

    /**
     * Sets businessStructureCode
     * @param string $businessStructureCode
     * @return $this
     */
    public function setBusinessStructureCode($businessStructureCode)
    {
        $this->container['businessStructureCode'] = $businessStructureCode;

        return $this;
    }

    /**
     * Gets businessStructureDescription
     * @return string
     */
    public function getBusinessStructureDescription()
    {
        return $this->container['businessStructureDescription'];
    }

    /**
     * Sets businessStructureDescription
     * @param string $businessStructureDescription
     * @return $this
     */
    public function setBusinessStructureDescription($businessStructureDescription)
    {
        $this->container['businessStructureDescription'] = $businessStructureDescription;

        return $this;
    }

    /**
     * Gets businessRegistrationNumberCode
     * @return string
     */
    public function getBusinessRegistrationNumberCode()
    {
        return $this->container['businessRegistrationNumberCode'];
    }

    /**
     * Sets businessRegistrationNumberCode
     * @param string $businessRegistrationNumberCode
     * @return $this
     */
    public function setBusinessRegistrationNumberCode($businessRegistrationNumberCode)
    {
        $this->container['businessRegistrationNumberCode'] = $businessRegistrationNumberCode;

        return $this;
    }

    /**
     * Gets businessRegistrationNumberCodeDescription
     * @return string
     */
    public function getBusinessRegistrationNumberCodeDescription()
    {
        return $this->container['businessRegistrationNumberCodeDescription'];
    }

    /**
     * Sets businessRegistrationNumberCodeDescription
     * @param string $businessRegistrationNumberCodeDescription
     * @return $this
     */
    public function setBusinessRegistrationNumberCodeDescription($businessRegistrationNumberCodeDescription)
    {
        $this->container['businessRegistrationNumberCodeDescription'] = $businessRegistrationNumberCodeDescription;

        return $this;
    }

    /**
     * Gets undeliverableIndicator
     * @return string
     */
    public function getUndeliverableIndicator()
    {
        return $this->container['undeliverableIndicator'];
    }

    /**
     * Sets undeliverableIndicator
     * @param string $undeliverableIndicator
     * @return $this
     */
    public function setUndeliverableIndicator($undeliverableIndicator)
    {
        $this->container['undeliverableIndicator'] = $undeliverableIndicator;

        return $this;
    }

    /**
     * Gets undeliverableDescription
     * @return string
     */
    public function getUndeliverableDescription()
    {
        return $this->container['undeliverableDescription'];
    }

    /**
     * Sets undeliverableDescription
     * @param string $undeliverableDescription
     * @return $this
     */
    public function setUndeliverableDescription($undeliverableDescription)
    {
        $this->container['undeliverableDescription'] = $undeliverableDescription;

        return $this;
    }

    /**
     * Gets financialStatementDate
     * @return \DateTime
     */
    public function getFinancialStatementDate()
    {
        return $this->container['financialStatementDate'];
    }

    /**
     * Sets financialStatementDate
     * @param \DateTime $financialStatementDate
     * @return $this
     */
    public function setFinancialStatementDate($financialStatementDate)
    {
        $this->container['financialStatementDate'] = $financialStatementDate;

        return $this;
    }

    /**
     * Gets reportDate
     * @return \DateTime
     */
    public function getReportDate()
    {
        return $this->container['reportDate'];
    }

    /**
     * Sets reportDate
     * @param \DateTime $reportDate
     * @return $this
     */
    public function setReportDate($reportDate)
    {
        $this->container['reportDate'] = $reportDate;

        return $this;
    }

    /**
     * Gets isOnlyAvailableAddress
     * @return bool
     */
    public function getIsOnlyAvailableAddress()
    {
        return $this->container['isOnlyAvailableAddress'];
    }

    /**
     * Sets isOnlyAvailableAddress
     * @param bool $isOnlyAvailableAddress
     * @return $this
     */
    public function setIsOnlyAvailableAddress($isOnlyAvailableAddress)
    {
        $this->container['isOnlyAvailableAddress'] = $isOnlyAvailableAddress;

        return $this;
    }

    /**
     * Gets isSubsidiary
     * @return bool
     */
    public function getIsSubsidiary()
    {
        return $this->container['isSubsidiary'];
    }

    /**
     * Sets isSubsidiary
     * @param bool $isSubsidiary
     * @return $this
     */
    public function setIsSubsidiary($isSubsidiary)
    {
        $this->container['isSubsidiary'] = $isSubsidiary;

        return $this;
    }

    /**
     * Gets totalEmployeesIncludingPrincipalsIndicator
     * @return bool
     */
    public function getTotalEmployeesIncludingPrincipalsIndicator()
    {
        return $this->container['totalEmployeesIncludingPrincipalsIndicator'];
    }

    /**
     * Sets totalEmployeesIncludingPrincipalsIndicator
     * @param bool $totalEmployeesIncludingPrincipalsIndicator
     * @return $this
     */
    public function setTotalEmployeesIncludingPrincipalsIndicator($totalEmployeesIncludingPrincipalsIndicator)
    {
        $this->container['totalEmployeesIncludingPrincipalsIndicator'] = $totalEmployeesIncludingPrincipalsIndicator;

        return $this;
    }

    /**
     * Gets isOutOfBusiness
     * @return bool
     */
    public function getIsOutOfBusiness()
    {
        return $this->container['isOutOfBusiness'];
    }

    /**
     * Sets isOutOfBusiness
     * @param bool $isOutOfBusiness
     * @return $this
     */
    public function setIsOutOfBusiness($isOutOfBusiness)
    {
        $this->container['isOutOfBusiness'] = $isOutOfBusiness;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\DataMill\ObjectSerializer::sanitizeForSerialization($this));
    }
}
